{"version":3,"sources":["utils/index.js","components/Stepper/Stepper.js","components/Newspaper/Sections/Title/Title.js","components/Newspaper/Sections/Header/Header.js","components/Newspaper/Sections/Content/Content.js","components/Newspaper/Newspaper.js","components/SavedNewspaper/SavedNewspaper.js","components/Modal/Modal.js","components/MobileNav/MobileNav.js","api/lexperApi.js","api/newsApi.js","App.js","index.js","img/1.png","img/2.png","img/3.png","img/4.png"],"names":["createWordMap","str","split","map","word","isClicked","isMouseOver","browseSentence","lightBulbSentence","saveSentence","useColorlibStepIconStyles","makeStyles","root","backgroundColor","zIndex","color","width","height","display","borderRadius","justifyContent","alignItems","active","backgroundImage","boxShadow","completed","ColorlibConnector","withStyles","alternativeLabel","top","line","border","StepConnector","Stepper","loadExamples","loadNewArticle","pencilState","isDisplayFromSaved","markerState","isPoetryFinished","saveState","saveCurrentArticle","useState","activeStep","setActiveStep","steps","handleReset","ColorlibStepIcon","props","classes","className","clsx","1","2","3","4","5","String","icon","Button","onClick","connector","label","Step","key","StepLabel","StepIconComponent","Typography","stepIndex","getStepContent","length","variant","Title","publishedAt","entireCurrentArticleOF","currentTitleWordMap","isPencilState","isMarkerState","onMouseOverHandler","onClickHandler","volNum","date","Date","dateString","getDate","getMonth","getFullYear","pencilHandler","markerHandler","isWordUsed","title","Object","keys","e","i","onMouseOver","onFocus","Grid","container","item","xs","Header","md","lg","Content","currentContentWordMap","content","alt","src","urlToImage","author","Newspaper","isInspiration","currentAuthorWordMap","inspirationImgs","imageOne","imageTwo","imageThree","imageFour","Math","floor","random","SavedNewspaper","savedArticles","onSaveHandler","deleteSavedHandler","articleObj","id","description","type","Modal","handleClose","isOpen","open","onClose","MobileNav","isNavOpen","toggleNav","displayComponent","Drawer","role","List","text","index","ListItem","button","ListItemText","primary","getLexperContent","urlFromNewsApi","a","async","axios","get","headers","process","params","media","url","data","article","getArticles","articles","isMobile","window","innerWidth","App","setState","totalArticles","state","randomNum","fullContentText","category","prevState","clickedAuthorWordMap","clickedTitleWordMap","clickedContentWordMap","updatedSavedArticles","_","omit","handleOpen","inspirationImg","componentToBeRendered","sm","lx","isLoading","pendingContents","Promise","all","fullContents","forEach","Uniqid","this","isEmpty","loaded","scale","left","position","loadedClassName","size","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a9b2257d.chunk.js","sourcesContent":["export const createWordMap = (str) => str.split(' ').map((word) => ({ word, isClicked: false, isMouseOver: false }));\n\nexport const getRandomNumber = () => Math.floor(Math.random() * 9);\n\nexport const getRandomNumberUpTo4 = () => Math.floor(Math.random() * 3);\n","import React, { useState } from 'react';\nimport { Stepper as MUIStepper, Step, StepLabel, Button, Typography } from '@material-ui/core';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport './Stepper.css';\n//----------------------------------------\nconst getSteps = () => ['Get Inspired', 'Browse Articles', 'Box the words', 'Black-out the Rest', 'Save Poetry'];\n\nconst browseSentence = <span>Click the Plus button below to browse through articles, choose one you like!</span>;\n\nconst lightBulbSentence = <span>Click the Lightbulb button below to see real examples. <br /> Once you are inspired, click Next button to choose your own article.</span>;\n\nconst saveSentence = <span>Congrats you completed your First Poetry...Great! <br /> If you want to save this, click the Save button below or click Finish!</span>;\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage:\n      'linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage:\n      'linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */',\n  },\n});\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst getStepContent = (stepIndex) => {\n  switch (stepIndex) {\n    case 0:\n      return lightBulbSentence;\n    case 1:\n      return browseSentence;\n    case 2:\n      return \"Find words from the article that you like. Click them to 'box the word'. This will form your poem. Once you're done, click Next to continue\";\n    case 3:\n      return \"Hover over the rest of the words to black them out! Once you're done, click Next to continue\";\n    case 4:\n      return saveSentence;\n\n    default:\n      return 'Unknown stepIndex';\n  }\n};\n\nconst Stepper = ({ loadExamples, loadNewArticle, pencilState, isDisplayFromSaved, isPoetryFinished, markerState, saveState, saveCurrentArticle }) => {\n  // useState returns an array with two values\n  // (one being the state property (activeStep) and the second being the setter function for that state) (setActive)\n  // we can also specify the default value for the state property (activeStep), useState takes in a default value\n  const [activeStep, setActiveStep] = useState(0);\n\n  const steps = getSteps();\n\n  const handleNext = () => {\n    switch (activeStep) {\n      case 0:\n        loadNewArticle();\n        break;\n      case 1:\n        pencilState();\n        break;\n      case 2:\n        markerState();\n        break;\n      case 3:\n        saveState();\n        break;\n      default:\n        break;\n    }\n\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    loadNewArticle();\n  };\n\n  function ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n\n    const { active, completed } = props;\n\n    const icons = {\n      1: 1,\n      2: 2,\n      3: 3,\n      4: 4,\n      5: 5,\n    };\n\n    return (\n      <div className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n      >\n        {icons[String(props.icon)]}\n      </div>\n    );\n  }\n\n  return (\n    isDisplayFromSaved\n      ? <Button className=\"next-btn reset-btn\" onClick={handleReset}>Reset</Button>\n      : (\n        <div className=\"root\">\n          <MUIStepper className=\"stepper\" activeStep={activeStep} alternativeLabel connector={<ColorlibConnector />}>\n            {steps.map((label) => (<Step key={label}><StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel></Step>))}\n          </MUIStepper>\n          <div className=\"info\">\n            <div>\n              <Typography className=\"instructions\">{getStepContent(activeStep)}</Typography>\n              {activeStep === 0 ? <Button className=\"btn\" onClick={loadExamples}><i className=\"fas fa-2x fa-lightbulb\" /></Button> : null}\n              {activeStep === 1 ? <Button className=\"btn\" onClick={loadNewArticle}><i className=\"fas fa-2x fa-plus-circle\" /></Button> : null}\n              {activeStep === 4 ? <Button className=\"btn\" onClick={saveCurrentArticle}> <i className=\"fas fa-2x fa-save\" /> </Button> : null}\n              {\n                activeStep === steps.length - 1\n                  ? <Button className=\"next-btn\" variant=\"contained\" onClick={handleReset}>Finish</Button>\n                  : <Button className=\"next-btn\" variant=\"contained\" onClick={handleNext}>Next</Button>\n              }\n            </div>\n          </div>\n        </div>\n      )\n  );\n};\n\nStepper.propTypes = {\n  loadExamples: PropTypes.func.isRequired,\n  loadNewArticle: PropTypes.func.isRequired,\n  pencilState: PropTypes.func.isRequired,\n  markerState: PropTypes.func.isRequired,\n  saveState: PropTypes.func.isRequired,\n  saveCurrentArticle: PropTypes.func.isRequired,\n};\n\nexport default Stepper;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './Title.css';\n\nconst Title = ({ entireCurrentArticleOF: { publishedAt }, isDisplayFromSaved, currentTitleWordMap, isPencilState, isPoetryFinished, isMarkerState, onMouseOverHandler, onClickHandler, volNum }) => {\n  const date = new Date(publishedAt);\n  const dateString = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n\n  let pencilHandler = null;\n  let markerHandler = null;\n  let isWordUsed = true;\n\n  if (isPencilState) {\n    pencilHandler = onClickHandler;\n  } else if (isMarkerState) {\n    markerHandler = onMouseOverHandler;\n  }\n\n  const title = Object.keys(currentTitleWordMap).map((e, i) => {\n    if (isDisplayFromSaved || isPoetryFinished) {\n      isWordUsed = currentTitleWordMap[i].isClicked || currentTitleWordMap[i].isMouseOver;\n    }\n\n    return (\n      isWordUsed ? (\n        <span\n          key={i}\n          onClick={() => (pencilHandler ? pencilHandler(i, 'title') : null)}\n          onMouseOver={() => (markerHandler ? markerHandler(i, 'title') : null)}\n          onFocus={() => (markerHandler ? markerHandler(i, 'title') : null)}\n          className={\n            currentTitleWordMap[i].isClicked\n              ? 'pencil-style'\n              : currentTitleWordMap[i].isMouseOver\n                ? 'marker-style'\n                : null\n          }\n        >\n          <strong>{`${currentTitleWordMap[i].word} `}</strong>\n        </span>\n      ) : null\n    );\n  });\n\n  return (\n    <>\n      <Grid container className=\"title-container\">\n        <Grid item xs={6} className=\"date\">{`Published on: ${dateString}`}</Grid>\n        <Grid item xs={6} className=\"date-second\">{`Vol. 1 No. ${volNum}`}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12} className=\"title\">\n          <Typography variant=\"h4\" className=\"title-text\">\n            {title}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nTitle.propTypes = {\n  entireCurrentArticleOF: PropTypes.shape({ publishedAt: PropTypes.string.isRequired }).isRequired,\n  currentTitleWordMap: PropTypes.oneOfType([PropTypes.instanceOf(Array), PropTypes.shape({})]).isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  volNum: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport './Header.css';\n\nconst Header = () => (\n  <Grid container>\n    <Grid item xs={12} md={8} className=\"header-title\">\n      <Typography variant=\"h3\"><span>B</span>lackout</Typography>\n      <Typography variant=\"h3\"><span className=\"second-span\">P</span>oetry</Typography>\n    </Grid>\n    <Grid item xs={12} md={8} lg={4} className=\"side-info\">\n      <Typography variant=\"subtitle1\"><strong>Inspiration - </strong> Austin Kleon</Typography>\n      <Typography variant=\"subtitle1\"><strong>Powered By - </strong> NewsAPI and LexperAPI</Typography>\n    </Grid>\n  </Grid>\n);\n\nexport default Header;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './Content.css';\n\nconst Content = ({ entireCurrentArticleOF, currentContentWordMap, onMouseOverHandler, onClickHandler, isMarkerState, isPencilState, isPoetryFinished, isDisplayFromSaved }) => {\n  let pencilHandler = null;\n  let markerHandler = null;\n  let isWordUsed = true;\n\n  if (isPencilState) {\n    pencilHandler = onClickHandler;\n  } else if (isMarkerState) {\n    markerHandler = onMouseOverHandler;\n  }\n\n  const content = Object.keys(currentContentWordMap).map((e, i) => {\n    if (isDisplayFromSaved || isPoetryFinished) {\n      isWordUsed = currentContentWordMap[i].isClicked || currentContentWordMap[i].isMouseOver;\n    }\n\n    return (\n      isWordUsed ? (\n        <span key={i} onClick={() => (pencilHandler ? pencilHandler(i, 'content') : null)} onMouseOver={() => (markerHandler ? markerHandler(i, 'content') : null)} onFocus={() => (markerHandler ? markerHandler(i, 'content') : null)} className={currentContentWordMap[i].isClicked ? 'pencil-style' : currentContentWordMap[i].isMouseOver ? 'marker-style' : null}>\n          {`${currentContentWordMap[i].word} `}\n        </span>\n      ) : null\n    );\n  });\n\n  return (\n    <Grid container className=\"content-container\">\n      <Grid item xs={12} className=\"scroll\">\n        {!isDisplayFromSaved && !isPoetryFinished ? <img alt=\"article\" src={entireCurrentArticleOF.urlToImage} className=\"image\" /> : null}\n        <Typography variant=\"subtitle1\" className=\"text\">\n          {content}\n        </Typography>\n        <div className=\"author\">\n          <Typography variant=\"h6\">\n            {entireCurrentArticleOF.author}\n          </Typography>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Content;\n\nContent.propTypes = {\n  entireCurrentArticleOF: PropTypes.shape({ publishedAt: PropTypes.string.isRequired, urlToImage: PropTypes.string.isRequired, author: PropTypes.string.isRequired }).isRequired,\n  currentContentWordMap: PropTypes.oneOfType([PropTypes.instanceOf(Array), PropTypes.shape({})]).isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isDisplayFromSaved: PropTypes.bool.isRequired,\n  isPoetryFinished: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Newspaper.css';\nimport { Header, Title, Content } from './Sections';\n\nimport Stepper from '../Stepper/Stepper';\n\nimport { getRandomNumberUpTo4 } from '../../utils';\n\nimport imageOne from '../../img/1.png';\nimport imageTwo from '../../img/2.png';\nimport imageThree from '../../img/3.png';\nimport imageFour from '../../img/4.png';\n\nconst Newspaper = ({ entireCurrentArticleOF, isDisplayFromSaved, isPencilState, isMarkerState, volNum, currentTitleWordMap, onClickHandler, onMouseOverHandler, isInspiration, currentAuthorWordMap, currentContentWordMap, loadExamples, pencilState, markerState, saveState, loadNewArticle, saveCurrentArticle, isPoetryFinished }) => {\n  const inspirationImgs = [imageOne, imageTwo, imageThree, imageFour];\n\n  return (\n    <div className=\"center-inspiration\">\n      <Header />\n      {\n        isInspiration\n          ? <img src={inspirationImgs[getRandomNumberUpTo4()]} alt=\"\" />\n          : (\n            <>\n              <Title entireCurrentArticleOF={entireCurrentArticleOF} volNum={volNum} isDisplayFromSaved={isDisplayFromSaved} isPencilState={isPencilState} isMarkerState={isMarkerState} isPoetryFinished={isPoetryFinished} currentTitleWordMap={currentTitleWordMap} onClickHandler={onClickHandler} onMouseOverHandler={onMouseOverHandler} />\n              <Content entireCurrentArticleOF={entireCurrentArticleOF} isDisplayFromSaved={isDisplayFromSaved} isPoetryFinished={isPoetryFinished} isPencilState={isPencilState} isMarkerState={isMarkerState} currentAuthorWordMap={currentAuthorWordMap} onClickHandler={onClickHandler} onMouseOverHandler={onMouseOverHandler} currentContentWordMap={currentContentWordMap} />\n            </>\n          )\n      }\n      <Stepper loadNewArticle={loadNewArticle} loadExamples={loadExamples} pencilState={pencilState} markerState={markerState} saveState={saveState} saveCurrentArticle={saveCurrentArticle} isDisplayFromSaved={isDisplayFromSaved} />\n    </div>\n  );\n};\n\nNewspaper.propTypes = {\n  volNum: PropTypes.number.isRequired,\n  isDisplayFromSaved: PropTypes.bool.isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  currentTitleWordMap: PropTypes.oneOfType([PropTypes.instanceOf(Array), PropTypes.shape({})]).isRequired,\n  currentContentWordMap: PropTypes.oneOfType([PropTypes.instanceOf(Array), PropTypes.shape({})]).isRequired,\n  entireCurrentArticleOF: PropTypes.shape([]).isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  isInspiration: PropTypes.bool.isRequired,\n  loadExamples: PropTypes.func.isRequired,\n  pencilState: PropTypes.func.isRequired,\n  markerState: PropTypes.func.isRequired,\n  saveState: PropTypes.func.isRequired,\n  loadNewArticle: PropTypes.func.isRequired,\n  saveCurrentArticle: PropTypes.func.isRequired,\n};\n\nexport default Newspaper;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './SavedNewspaper.css';\n\nconst SavedNewspaper = ({ savedArticles, onSaveHandler, deleteSavedHandler }) => (\n  <Grid container className=\"saved-newspapers-container\">\n    {Object.keys(savedArticles).map((articleObj, i) => (\n      <Grid key={i} item className=\"folded-bg\">\n        <div className=\"saved-container\" onClick={() => onSaveHandler(savedArticles[articleObj].entireCurrentArticleOF.id)}>\n          <Typography variant=\"subtitle1\">{savedArticles[articleObj].entireCurrentArticleOF.title}</Typography>\n          <Typography variant=\"body1\">{savedArticles[articleObj].entireCurrentArticleOF.description}</Typography>\n        </div>\n        <div>\n          <button className=\"btn delete-btn\" type=\"button\" onClick={() => deleteSavedHandler(savedArticles[articleObj].entireCurrentArticleOF.id)}>Delete</button>\n        </div>\n      </Grid>\n    ))}\n  </Grid>\n);\n\nSavedNewspaper.propTypes = {\n  savedArticles: PropTypes.shape([]).isRequired,\n  onSaveHandler: PropTypes.func.isRequired,\n  deleteSavedHandler: PropTypes.func.isRequired,\n};\n\nexport default SavedNewspaper;\n","import React from 'react';\nimport { Modal as ModalMUI } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\n\nconst Modal = ({ handleClose, isOpen }) => (\n  <ModalMUI open={isOpen} onClose={handleClose}>\n    <div className=\"video-container\" onClick={handleClose}>\n      <iframe className=\"video\" title=\"instructions\" src=\"https://www.youtube.com/embed/wKpVgoGr6kE\" />\n    </div>\n  </ModalMUI>\n);\n\nModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Drawer, List, ListItem, ListItemText } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './MobileNav.css';\n\nconst MobileNav = ({ isNavOpen, toggleNav, displayComponent }) => (\n  <Drawer open={isNavOpen} onClose={toggleNav}>\n    <div role=\"presentation\" onClick={toggleNav}>\n      <List>\n        {['Instructions', 'Newspaper', 'Saved'].map((text, index) => (\n          <ListItem button onClick={() => displayComponent(index)} key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  </Drawer>\n);\n\nMobileNav.propTypes = {\n  isNavOpen: PropTypes.bool.isRequired,\n  toggleNav: PropTypes.func.isRequired,\n  displayComponent: PropTypes.func.isRequired,\n};\n\nexport default MobileNav;\n","import axios from \"axios\";\n\nconst getLexperContent = async urlFromNewsApi => {\n  try {\n    const { data: { article: { text } } } = await axios.get(\"https://lexper.p.rapidapi.com/v1.1/extract\", {\n      headers: { \"x-rapidapi-host\": \"lexper.p.rapidapi.com\", \"x-rapidapi-key\": process.env.REACT_APP_X_RAPIDAPI_KEY },\n      params: { media: \"1\", url: urlFromNewsApi }\n    });\n\n    return text;\n  } catch (e) {\n    return e;\n  }\n};\n\nexport default getLexperContent;\n","import axios from 'axios';\n\nconst getArticles = async () => {\n  try {\n    const url = `https://newsapi.org/v2/everything?q=Tech&from=2020-01-01&sortBy=popularity&pageSize=10&apiKey=${process.env.REACT_APP_NEWS_API_KEY}`;\n\n    const { data: { articles } } = await axios.get(url);\n\n    return articles;\n  } catch (e) {\n    return e;\n  }\n};\n\nexport default getArticles;\n","import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport _ from 'lodash';\nimport Loader from 'react-loader';\nimport Uniqid from 'uniqid';\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport { createWordMap, getRandomNumber } from './utils';\nimport { Modal, Newspaper, SavedNewspaper, MobileNav } from './components';\nimport { getLexperContent, getArticles } from './api';\nimport './App.css';\n\nconst isMobile = window.innerWidth <= 768;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalArticles: [],\n      savedArticles: {},\n      entireCurrentArticleOF: [],\n      currentTitleWordMap: [],\n      currentAuthorWordMap: [],\n      currentContentWordMap: [],\n      isInspiration: false,\n      isPencilState: false,\n      isMarkerState: false,\n      isLoading: true,\n      isDisplayFromSaved: false,\n      isPoetryFinished: false,\n      isOpen: false,\n      isNavOpen: false,\n      volNum: 1,\n    };\n\n    this.componentToBeRendered = null;\n  }\n\n  async componentDidMount() {\n    const articles = await getArticles();\n\n    const pendingContents = articles.map(async (article) => getLexperContent(article.url));\n    const fullContents = await Promise.all(pendingContents);\n\n    articles.forEach((article, i) => {\n      article.fullContentText = fullContents[i];\n      article.id = Uniqid();\n    });\n\n    this.setState({\n      totalArticles: articles,\n      entireCurrentArticleOF: {\n        ...articles[0],\n        fullContentText: articles[0].fullContentText,\n        id: articles[0].id,\n      },\n      currentTitleWordMap: createWordMap(articles[0].title),\n      currentAuthorWordMap: createWordMap(articles[0].author),\n      currentContentWordMap: createWordMap(articles[0].fullContentText),\n      isLoading: false,\n    });\n  }\n\n  pencilState = () => this.setState({ isPencilState: true, isMarkerState: false, isDisplayFromSaved: false, isInspiration: false, isPoetryFinished: false });\n\n  markerState = () => this.setState({ isPencilState: false, isMarkerState: true, isDisplayFromSaved: false, isInspiration: false, isPoetryFinished: false });\n\n  saveState = () => this.setState({ isPencilState: false, isMarkerState: false, isDisplayFromSaved: false, isInspiration: false, isPoetryFinished: true });\n\n  loadExamples = () => this.setState({ isInspiration: true, isDisplayFromSaved: false, isPoetryFinished: false });\n\n  loadNewArticle = async () => {\n    const { totalArticles } = this.state;\n\n    const randomNum = getRandomNumber();\n\n    this.setState({\n      volNum: randomNum,\n      isInspiration: false,\n      isMarkerState: false,\n      isPencilState: false,\n      isDisplayFromSaved: false,\n      isPoetryFinished: false,\n      entireCurrentArticleOF: {\n        ...totalArticles[randomNum],\n        fullContentText: totalArticles[randomNum].fullContentText,\n        id: totalArticles[randomNum].id,\n      },\n      currentTitleWordMap: createWordMap(totalArticles[randomNum].title),\n      currentAuthorWordMap: createWordMap(totalArticles[randomNum].author),\n      currentContentWordMap: createWordMap(\n        totalArticles[randomNum].fullContentText,\n      ),\n    });\n  };\n\n  saveCurrentArticle = () => {\n    const { savedArticles, currentTitleWordMap, currentContentWordMap, currentAuthorWordMap, entireCurrentArticleOF } = this.state;\n\n    if (!savedArticles[entireCurrentArticleOF.id]) {\n      this.setState({\n        savedArticles: {\n          ...savedArticles,\n          [entireCurrentArticleOF.id]: { currentTitleWordMap, currentContentWordMap, currentAuthorWordMap, entireCurrentArticleOF },\n        },\n        isInspiration: false,\n        isMarkerState: false,\n        isPencilState: false,\n      });\n    } else {\n      this.setState({\n        savedArticles: {\n          ...savedArticles,\n          [entireCurrentArticleOF.id]: { currentTitleWordMap, currentContentWordMap, currentAuthorWordMap, entireCurrentArticleOF, isInspiration: false, isMarkerState: false, isPencilState: false },\n        },\n      });\n    }\n  };\n\n  onClickHandler = (i, category) => {\n    const { currentTitleWordMap, currentAuthorWordMap, currentContentWordMap } = this.state;\n\n    switch (category) {\n      case 'title':\n        this.setState((prevState) => ({\n          currentTitleWordMap: {\n            ...currentTitleWordMap,\n            [i]: {\n              ...currentTitleWordMap[i],\n              isClicked: !prevState.currentTitleWordMap[i].isClicked,\n            },\n          },\n        }));\n        break;\n      case 'author':\n        this.setState((prevState) => ({\n          currentAuthorWordMap: {\n            ...currentAuthorWordMap,\n            [i]: {\n              ...currentAuthorWordMap[i],\n              isClicked: !prevState.currentAuthorWordMap[i].isClicked,\n            },\n          },\n        }));\n        break;\n      case 'content':\n        this.setState((prevState) => ({\n          currentContentWordMap: {\n            ...currentContentWordMap,\n            [i]: {\n              ...currentContentWordMap[i],\n              isClicked: !prevState.currentContentWordMap[i].isClicked,\n            },\n          },\n        }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  onMouseOverHandler = (i, category) => {\n    const { currentTitleWordMap, currentAuthorWordMap, currentContentWordMap } = this.state;\n\n    switch (category) {\n      case 'title':\n        this.setState({\n          currentTitleWordMap: {\n            ...currentTitleWordMap,\n            [i]: { ...currentTitleWordMap[i], isMouseOver: true },\n          },\n        });\n        break;\n      case 'author':\n        this.setState({\n          currentAuthorWordMap: {\n            ...currentAuthorWordMap,\n            [i]: { ...currentAuthorWordMap[i], isMouseOver: true },\n          },\n        });\n        break;\n      case 'content':\n        this.setState({\n          currentContentWordMap: {\n            ...currentContentWordMap,\n            [i]: { ...currentContentWordMap[i], isMouseOver: true },\n          },\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  onSaveHandler = (i) => {\n    const { savedArticles } = this.state;\n\n    const { currentAuthorWordMap: clickedAuthorWordMap, currentTitleWordMap: clickedTitleWordMap, currentContentWordMap: clickedContentWordMap } = savedArticles[i];\n\n    this.setState({ isDisplayFromSaved: true, isPoetryFinished: false, isInspiration: false, currentAuthorWordMap: clickedAuthorWordMap, currentTitleWordMap: clickedTitleWordMap, currentContentWordMap: clickedContentWordMap });\n  };\n\n  deleteSavedHandler = (i) => {\n    const { savedArticles } = this.state;\n\n    const updatedSavedArticles = _.omit(savedArticles, i);\n\n    this.setState({ savedArticles: { ...updatedSavedArticles } });\n  };\n\n  handleOpen = () => this.setState({ isOpen: true });\n\n  handleClose = () => this.setState({ isOpen: false });\n\n  toggleNav = () => this.setState((prevState) => ({ isNavOpen: !prevState.isNavOpen }))\n\n  displayComponent = (i) => {\n    const { entireCurrentArticleOF, savedArticles, isInspiration, currentTitleWordMap, currentAuthorWordMap, currentContentWordMap, volNum, isDisplayFromSaved, inspirationImg, isPencilState, isMarkerState, isPoetryFinished } = this.state;\n\n    switch (i) {\n      case 0:\n        this.componentToBeRendered = (\n          <div className=\"video-container\">\n            <iframe title=\"instructions\" className=\"video\" src=\"https://www.youtube.com/embed/wKpVgoGr6kE\" />\n          </div>\n        );\n        break;\n      case 1:\n        this.componentToBeRendered = (\n          <Grid item xs={12} sm={12} md={7} lg={7} lx={7} className=\"newspaper-container\">\n            <Newspaper volNum={volNum} entireCurrentArticleOF={entireCurrentArticleOF} isPencilState={isPencilState} isMarkerState={isMarkerState} isInspiration={isInspiration} isDisplayFromSaved={isDisplayFromSaved} inspirationImg={inspirationImg} currentTitleWordMap={currentTitleWordMap} currentAuthorWordMap={currentAuthorWordMap} isPoetryFinished={isPoetryFinished} currentContentWordMap={currentContentWordMap} onClickHandler={this.onClickHandler} onMouseOverHandler={this.onMouseOverHandler} loadNewArticle={this.loadNewArticle} loadExamples={this.loadExamples} pencilState={this.pencilState} markerState={this.markerState} saveState={this.saveState} saveCurrentArticle={this.saveCurrentArticle} />\n          </Grid>\n        );\n        break;\n      case 2:\n        this.componentToBeRendered = (\n          <Grid item xs={12} md={3} lg={3}>\n            <SavedNewspaper onSaveHandler={this.onSaveHandler} savedArticles={savedArticles} volNum={volNum} deleteSavedHandler={this.deleteSavedHandler} />\n          </Grid>\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const { entireCurrentArticleOF, savedArticles, isInspiration, currentTitleWordMap, currentAuthorWordMap, currentContentWordMap, volNum, isPoetryFinished, isDisplayFromSaved, inspirationImg, isPencilState, isMarkerState, isLoading, isNavOpen, isOpen } = this.state;\n\n    if (_.isEmpty(entireCurrentArticleOF)) {\n      return (\n        <Grid container className=\"main-container\">\n          <Loader loaded={false} scale={2.0} top=\"50%\" left=\"50%\" position=\"relative\" loadedClassName=\"loader\" />\n        </Grid>\n      );\n    }\n\n    if (isMobile) {\n      return (\n        <>\n          <button type=\"button\" className=\"nav-container\" onClick={this.toggleNav}> <DehazeIcon /> </button>\n          <MobileNav toggleNav={this.toggleNav} isNavOpen={isNavOpen} displayComponent={this.displayComponent} />\n          {\n            this.componentToBeRendered || (\n              <div className=\"video-container\">\n                <iframe title=\"instructions\" className=\"video\" src=\"https://www.youtube.com/embed/wKpVgoGr6kE\" />\n              </div>\n            )\n          }\n        </>\n      );\n    }\n\n    return (\n      <Grid container className=\"main-container\">\n        <Modal handleClose={this.handleClose} isOpen={isOpen} />\n        <Grid item className=\"bg-showing\" md={2} lg={2} lx={2}>\n          <Button className=\"learnmore-button\" variant=\"contained\" size=\"small\" onClick={this.handleOpen}>Learn more</Button>\n        </Grid>\n        <Grid item xs={12} sm={12} md={7} lg={7} lx={7} className={`newspaper-container ${isLoading ? 'loader' : ''}`}>\n          <Newspaper volNum={volNum} entireCurrentArticleOF={entireCurrentArticleOF} isPencilState={isPencilState} isMarkerState={isMarkerState} isInspiration={isInspiration} isDisplayFromSaved={isDisplayFromSaved} isPoetryFinished={isPoetryFinished} inspirationImg={inspirationImg} currentTitleWordMap={currentTitleWordMap} currentAuthorWordMap={currentAuthorWordMap} currentContentWordMap={currentContentWordMap} onClickHandler={this.onClickHandler} onMouseOverHandler={this.onMouseOverHandler} loadNewArticle={this.loadNewArticle} loadExamples={this.loadExamples} pencilState={this.pencilState} markerState={this.markerState} saveState={this.saveState} saveCurrentArticle={this.saveCurrentArticle} />\n        </Grid>\n        <Grid item xs={12} md={3} lg={3}>\n          <SavedNewspaper onSaveHandler={this.onSaveHandler} savedArticles={savedArticles} volNum={volNum} deleteSavedHandler={this.deleteSavedHandler} isPoetryFinished={isPoetryFinished} />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/1.be86d7a1.png\";","module.exports = __webpack_public_path__ + \"static/media/2.53b4d42f.png\";","module.exports = __webpack_public_path__ + \"static/media/3.13735280.png\";","module.exports = __webpack_public_path__ + \"static/media/4.58af08ba.png\";"],"sourceRoot":""}