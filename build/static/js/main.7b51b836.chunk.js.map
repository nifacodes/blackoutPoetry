{"version":3,"sources":["components/Newspaper/Sections/Header/Header.module.css","components/Modal/Modal.module.css","components/Stepper/Stepper.module.css","components/Newspaper/Newspaper.module.css","img/1.png","img/2.png","img/3.png","img/4.png","utils/index.js","components/Stepper/Stepper.js","components/Newspaper/Sections/Title/Title.js","components/Newspaper/Sections/Header/Header.js","components/Newspaper/Sections/Content/Content.js","components/Newspaper/Newspaper.js","components/SavedNewspaper/SavedNewspaper.js","components/Modal/Modal.js","components/MobileNav/MobileNav.js","components/PrintableNewspaper/PrintableNewspaper.js","api/lexperApi.js","api/newsApi.js","App.js","index.js","App.module.css","components/Newspaper/Sections/Content/Content.module.css","components/Newspaper/Sections/Title/Title.module.css","components/SavedNewspaper/SavedNewspaper.module.css"],"names":["module","exports","createWordMap","str","split","map","word","isClicked","isMouseOver","getRandomNumber","Math","floor","random","isMobile","window","innerWidth","browseSentence","className","styles","lightBulbSentence","saveSentence","boxWords","blackOutWords","useColorlibStepIconStyles","makeStyles","root","backgroundColor","zIndex","color","width","height","display","borderRadius","justifyContent","alignItems","active","backgroundImage","boxShadow","completed","ColorlibConnector","withStyles","alternativeLabel","top","line","flexWrap","border","StepConnector","Stepper","loadExamples","loadNewArticle","pencilState","isDisplayFromSaved","markerState","isPoetryFinished","saveState","saveCurrentArticle","useState","activeStep","setActiveStep","steps","handleNext","handleReset","ColorlibStepIcon","props","classes","icon","classNames","1","2","3","4","5","String","Button","onClick","stepper","connector","label","Step","key","StepLabel","StepIconComponent","MobileStepper","position","variant","nextButton","length","size","backButton","info","Typography","insructions","stepIndex","getStepContent","btn","Title","publishedAt","entireCurrentArticleOF","currentTitleWordMap","isPencilState","isMarkerState","onMouseOverHandler","onClickHandler","volNum","date","Date","dateString","getDate","getMonth","getFullYear","pencilHandler","markerHandler","isWordUsed","title","Object","keys","e","i","onMouseOver","onFocus","Grid","container","item","xs","vol","Header","handleOpen","sm","md","lg","fullWidth","MyDocument","Content","currentContentWordMap","isClickedWord","usedWords","content","push","wordss","styless","StyleSheet","create","page","section","textAlign","margin","style","stlye","scroll","alt","src","urlToImage","image","text","author","Newspaper","isInspiration","currentAuthorWordMap","inspirationImgs","imageOne","imageTwo","imageThree","imageFour","SavedNewspaper","savedArticles","onSaveHandler","deleteSavedHandler","articleObj","id","type","Modal","handleClose","isOpen","open","onClose","video","MobileNav","isNavOpen","toggleNav","displayComponent","Drawer","role","List","index","ListItem","button","ListItemText","primary","PrintableNewspaper","document","fileName","blob","url","loading","error","getLexperContent","urlFromNewsApi","a","async","axios","get","headers","process","params","media","data","article","getArticles","articles","App","setState","state","totalArticles","randomNum","_","isEmpty","fullContentText","category","prevState","downloadCurrentArticle","clickedAuthorWordMap","clickedTitleWordMap","clickedContentWordMap","step","updatedSavedArticles","omit","isLoading","pendingContents","Promise","all","fullContents","forEach","Uniqid","this","inspirationImg","loaded","scale","left","loadedClassName","loader","lx","componentToBeRendered","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7b51b836.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-container\":\"Header_header-container__2dmcy\",\"learnmore-button\":\"Header_learnmore-button__1TrKJ\",\"side-info\":\"Header_side-info__1L0_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video-container\":\"Modal_video-container__2xH0M\",\"video\":\"Modal_video__36DXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Stepper_info__2vDvP\",\"step-btn\":\"Stepper_step-btn__TmFnZ\",\"main-font\":\"Stepper_main-font__1b-yN\",\"w-100\":\"Stepper_w-100__1nrAJ\",\"stepper\":\"Stepper_stepper__iAiSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center-inspiration\":\"Newspaper_center-inspiration__BxTBl\"};","module.exports = __webpack_public_path__ + \"static/media/1.be86d7a1.png\";","module.exports = __webpack_public_path__ + \"static/media/2.53b4d42f.png\";","module.exports = __webpack_public_path__ + \"static/media/3.13735280.png\";","module.exports = __webpack_public_path__ + \"static/media/4.58af08ba.png\";","export const createWordMap = (str) => str.split(' ').map((word) => ({ word, isClicked: false, isMouseOver: false }));\n\nexport const getRandomNumber = () => Math.floor(Math.random() * 9);\n\nexport const getRandomNumberUpTo4 = () => Math.floor(Math.random() * 3);\n","import React, { useState } from 'react';\nimport {\n  Stepper as MUIStepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n  MobileStepper\n} from '@material-ui/core';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Stepper.module.css';\nimport { PrintableNewspaper } from '..';\n\nconst isMobile = window.innerWidth <= 768;\n\nconst getSteps = () => [\n  <span className={styles['main-font']}>{`Get Inspired`}</span>,\n  <span className={styles['main-font']}>{`Browse Articles`}</span>,\n  <span className={styles['main-font']}>{`Box the words`}</span>,\n  <span className={styles['main-font']}>{`Black-out the Rest`}</span>,\n  <span className={styles['main-font']}>{`Save Poetry`}</span>,\n];\n\nconst browseSentence = (\n  <span className={styles['main-font']}>\n    Click the Plus button below to browse through articles, choose one you like!\n  </span>\n);\n\nconst lightBulbSentence = (\n  <span className={styles['main-font']}>\n    Click the Lightbulb button below to see real examples. Once you are\n    inspired, click Next button to choose your own article.\n  </span>\n);\n\nconst saveSentence = (\n  <span className={styles['main-font']}>\n    Congrats you completed your First Poetry...Great! If you want to save\n    this, click the Save button below or click Finish!\n  </span>\n);\n\nconst boxWords = (\n  <span className={styles['main-font']}>\n    {`Find words from the article that you like. Click them to 'box the word'.\n    This will form your poem. Once you're done, click Next to continue`}\n  </span>\n);\n\nconst blackOutWords = (\n  <span className={styles['main-font']}>\n    Hover over the rest of the words to black them out! Once you&aposre done, click\n    Next to continue\n  </span>\n);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage:\n      'linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage:\n      'linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */',\n  },\n});\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */',\n    },\n  },\n  line: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst getStepContent = (stepIndex) => {\n  switch (stepIndex) {\n    case 0:\n      return lightBulbSentence;\n    case 1:\n      return browseSentence;\n    case 2:\n      return boxWords;\n    case 3:\n      return blackOutWords;\n    case 4:\n      return saveSentence;\n\n    default:\n      return 'Unknown stepIndex';\n  }\n};\n\nconst Stepper = ({\n  loadExamples,\n  loadNewArticle,\n  pencilState,\n  isDisplayFromSaved,\n  isPoetryFinished,\n  markerState,\n  saveState,\n  saveCurrentArticle,\n}) => {\n  // useState returns an array with two values\n  // (one being the state property (activeStep) and the second being the setter function for that state) (setActive)\n  // we can also specify the default value for the state property (activeStep), useState takes in a default value\n  const [activeStep, setActiveStep] = useState(0);\n\n  const steps = getSteps();\n\n  const handleNext = () => {\n    switch (activeStep) {\n      case 0:\n        loadNewArticle();\n        break;\n      case 1:\n        pencilState();\n        break;\n      case 2:\n        markerState();\n        break;\n      case 3:\n        saveState();\n        break;\n      default:\n        break;\n    }\n\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    loadNewArticle();\n  };\n\n  function ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n\n    const { active, completed, icon } = props;\n\n    const icons = {\n      1: 1,\n      2: 2,\n      3: 3,\n      4: 4,\n      5: 5,\n    };\n\n    return (\n      <div\n        className={classNames(classes.root, {\n          [classes.active]: active,\n          [classes.completed]: completed,\n        })}\n      >\n        {icons[String(icon)]}\n      </div>\n    );\n  }\n\n  return isDisplayFromSaved ? (\n    <Button className={styles['step-btn']} onClick={handleReset}>\n      Reset\n    </Button>\n  ) : (\n      <div className={styles.root}>\n        {!isMobile ? (\n          <MUIStepper\n            className={styles.stepper}\n            activeStep={activeStep}\n            alternativeLabel\n            connector={<ColorlibConnector />}\n          >\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n              </Step>\n            ))}\n          </MUIStepper>\n        ) : null}\n        {isMobile ? (\n          <MobileStepper\n            steps={6}\n            className={styles.stepper}\n            position=\"static\"\n            variant=\"text\"\n            activeStep={activeStep}\n            nextButton={activeStep === steps.length - 1 ? (\n              <Button size=\"small\" className={styles['step-btn']} onClick={handleReset}>\n                Finish\n                  <KeyboardArrowRight />\n              </Button>\n            ) : (\n                <Button size=\"small\" className={styles['step-btn']} onClick={handleNext}>\n                  Next\n                  <KeyboardArrowRight />\n                </Button>\n              )}\n            backButton={(\n              <Button size=\"small\" className={styles['step-btn']} onClick={handleReset}>\n                Reset\n                  <RotateLeftIcon />\n              </Button>\n            )}\n          />\n        ) : null}\n        {isMobile ? null : activeStep === steps.length - 1 ? (\n          <Button\n            className={styles['step-btn']}\n            variant=\"contained\"\n            onClick={handleReset}\n          >\n            Finish\n            </Button>\n        ) : (\n            <Button\n              className={styles['step-btn']}\n              variant=\"contained\"\n              size=\"medium\"\n              onClick={handleNext}\n            >\n              Next\n            </Button>\n          )}\n        <div className={styles.info}>\n          <div className=\"w-100\">\n            <Typography className={styles.insructions}>\n              {getStepContent(activeStep)}\n            </Typography>\n            {activeStep === 0 ? (\n              <Button className={styles.btn} onClick={loadExamples}>\n                {/*  <Button className={styles.btn} onClick={saveCurrentArticle}> */}\n                <i className={classNames('fas', 'fa-2x', 'fa-lightbulb')} />\n              </Button>\n            ) : null}\n            {activeStep === 1 ? (\n              <Button className={styles.btn} onClick={loadNewArticle}>\n                <i className={classNames('fas', 'fa-2x', 'fa-plus-circle')} />\n              </Button>\n            ) : null}\n            {activeStep === 4 ? (\n              <>\n                <Button className={styles.btn} onClick={saveCurrentArticle}>\n                  <i className={classNames('fas', 'fa-2x', 'fa-save')} />\n                </Button>\n                <PrintableNewspaper />\n              </>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n};\n\nStepper.propTypes = {\n  loadExamples: PropTypes.func.isRequired,\n  loadNewArticle: PropTypes.func.isRequired,\n  pencilState: PropTypes.func.isRequired,\n  markerState: PropTypes.func.isRequired,\n  saveState: PropTypes.func.isRequired,\n  saveCurrentArticle: PropTypes.func.isRequired,\n  isDisplayFromSaved: PropTypes.bool.isRequired,\n  isPoetryFinished: PropTypes.bool.isRequired,\n};\n\nexport default Stepper;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport styles from './Title.module.css';\n\nconst Title = ({\n  entireCurrentArticleOF: { publishedAt },\n  isDisplayFromSaved,\n  currentTitleWordMap,\n  isPencilState,\n  isPoetryFinished,\n  isMarkerState,\n  onMouseOverHandler,\n  onClickHandler,\n  volNum,\n}) => {\n  const date = new Date(publishedAt);\n  const dateString = `${date.getDate()}/${date.getMonth()\n    + 1}/${date.getFullYear()}`;\n\n  let pencilHandler = null;\n  let markerHandler = null;\n  let isWordUsed = true;\n\n  if (isPencilState) {\n    pencilHandler = onClickHandler;\n  } else if (isMarkerState) {\n    markerHandler = onMouseOverHandler;\n  }\n\n  const title = Object.keys(currentTitleWordMap).map((e, i) => {\n    if (isDisplayFromSaved || isPoetryFinished) {\n      isWordUsed = currentTitleWordMap[i].isClicked || currentTitleWordMap[i].isMouseOver;\n    }\n\n    return isWordUsed ? (\n      <span\n        key={i}\n        onClick={() => (pencilHandler ? pencilHandler(i, 'title') : null)}\n        onMouseOver={() => (markerHandler ? markerHandler(i, 'title') : null)}\n        onFocus={() => (markerHandler ? markerHandler(i, 'title') : null)}\n        className={\n          currentTitleWordMap[i].isClicked\n            ? styles['pencil-style']\n            : currentTitleWordMap[i].isMouseOver\n              ? styles['marker-style']\n              : null\n        }\n      >\n        <strong className={styles['title-main']}>{`${currentTitleWordMap[i].word} `}</strong>\n      </span>\n    ) : null;\n  });\n\n  return (\n    <>\n      <Grid container className={styles['date-vol-container']}>\n        <Grid\n          item\n          xs={8}\n          className={styles.date}\n        >{`Published on: ${dateString}`}\n        </Grid>\n        <Grid\n          item\n          xs={4}\n          className={styles.vol}\n        >{`Vol. 1 No. ${volNum}`}\n        </Grid>\n      </Grid>\n      <Grid container className={styles['title-container']}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" classNames={styles['article-title']}>\n            {title}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nTitle.propTypes = {\n  entireCurrentArticleOF: PropTypes.shape({\n    publishedAt: PropTypes.string.isRequired,\n  }).isRequired,\n  currentTitleWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({}),\n  ]).isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  isDisplayFromSaved: PropTypes.bool.isRequired,\n  isPoetryFinished: PropTypes.bool.isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  volNum: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport styles from './Header.module.css';\n\nconst isMobile = window.innerWidth <= 768;\n\nconst Header = ({ handleOpen }) => (\n  <Grid container className={styles['header-container']}>\n    <Grid item xs={12} sm={8} md={8} lg={8}>\n      <Typography variant=\"h1\">\n        <div>BLACKOUT</div>\n        <div>POETRY</div>\n      </Typography>\n    </Grid>\n    <Grid item xs={12} sm={4} md={4} lg={4} className={styles['side-info']}>\n      <Typography variant=\"subtitle1\">\n\n        <span><strong className={styles['']}>Inspiration:</strong></span>\n        <span><p>Austin Kleon </p></span>\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        <span><strong>Powered By:</strong></span>\n        <span><p>NewsAPI and LexperAPI </p></span>\n\n      </Typography>\n      {!isMobile ? (\n        <Button\n          className={styles['learnmore-button']}\n          variant=\"contained\"\n          size=\"medium\"\n          fullWidth\n          onClick={handleOpen}>\n          LEARN MORE\n        </Button>\n      ) : null}\n    </Grid>\n  </Grid>\n);\nHeader.propTypes = {\n  handleOpen: PropTypes.func.isRequired,\n};\n\nexport default Header;\n\n\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n\nimport styles from './Content.module.css';\n\nlet MyDocument = null;\n\nconst Content = ({\n  entireCurrentArticleOF,\n  currentContentWordMap,\n  onMouseOverHandler,\n  onClickHandler,\n  isMarkerState,\n  isPencilState,\n  isPoetryFinished,\n  isDisplayFromSaved,\n}) => {\n  let pencilHandler = null;\n  let markerHandler = null;\n  let isWordUsed = true;\n  let isClickedWord = true;\n\n  if (isPencilState) {\n    pencilHandler = onClickHandler;\n  } else if (isMarkerState) {\n    markerHandler = onMouseOverHandler;\n  }\n  const usedWords = [];\n\n\n  // what to display\n  const content = Object.keys(currentContentWordMap).map((e, i) => {\n    if (isDisplayFromSaved || isPoetryFinished) {\n      isWordUsed = currentContentWordMap[i].isClicked\n        || currentContentWordMap[i].isMouseOver;\n      isClickedWord = currentContentWordMap[i].isClicked;\n    }\n\n    if (isClickedWord) {\n      usedWords.push(currentContentWordMap[i].word);\n    }\n\n    return isWordUsed ? (\n      <span\n        key={i}\n        onClick={() => (pencilHandler ? pencilHandler(i, 'content') : null)}\n        onMouseOver={() => (markerHandler ? markerHandler(i, 'content') : null)}\n        onFocus={() => (markerHandler ? markerHandler(i, 'content') : null)}\n        className={\n          currentContentWordMap[i].isClicked\n            ? styles['pencil-style']\n            : currentContentWordMap[i].isMouseOver\n              ? styles['marker-style']\n              : null\n        }\n      >\n        <span className={styles['main-font']}>{`${currentContentWordMap[i].word} `}</span>\n      </span>\n    ) : null;\n  });\n  const wordss = usedWords.map((word) => `${word} `);\n\n  const styless = StyleSheet.create({\n    page: { backgroundColor: 'black' },\n    section: { color: 'white', textAlign: 'center', margin: 30, border: '3 solid white' },\n    border: { border: '3 solid white' },\n  });\n\n  MyDocument = (\n    <Document>\n      <Page size=\"A4\" style={styless.page}>\n        <View style={styless.section}>\n          <Text stlye={styless.border}>{wordss}</Text>\n        </View>\n      </Page>\n    </Document>\n  );\n  // where and how to dislpay it\n  return (\n    <Grid container className={styles['content-container']}>\n      <Grid item xs={12} className={styles.scroll}>\n        {!isDisplayFromSaved && !isPoetryFinished ? (\n          <img\n            alt=\"article\"\n            src={entireCurrentArticleOF.urlToImage}\n            className={styles.image}\n          />\n        ) : null}\n        <Typography variant=\"subtitle1\" className={styles.text}>\n          {content}\n        </Typography>\n        <div className={styles.author}>\n          {!isDisplayFromSaved && !isPoetryFinished ? (\n            <Typography variant=\"h6\">\n              <span className={styles['main-font']}>{entireCurrentArticleOF.author}</span>\n            </Typography>\n          ) : null}\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport { MyDocument, Content };\n\nContent.propTypes = {\n  entireCurrentArticleOF: PropTypes.shape({\n    publishedAt: PropTypes.string.isRequired,\n    urlToImage: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n  }).isRequired,\n  currentContentWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({}),\n  ]).isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isDisplayFromSaved: PropTypes.bool.isRequired,\n  isPoetryFinished: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Newspaper.module.css';\n// import { Header, Title } from './Sections';\nimport { Header, Title } from './Sections';\nimport { Content } from './Sections/Content/Content';\n\nimport Stepper from '../Stepper/Stepper';\n\nimport { getRandomNumberUpTo4 } from '../../utils';\n\nimport imageOne from '../../img/1.png';\nimport imageTwo from '../../img/2.png';\nimport imageThree from '../../img/3.png';\nimport imageFour from '../../img/4.png';\n\nconst Newspaper = ({\n  entireCurrentArticleOF,\n  isDisplayFromSaved,\n  isPencilState,\n  isMarkerState,\n  volNum,\n  currentTitleWordMap,\n  onClickHandler,\n  onMouseOverHandler,\n  isInspiration,\n  currentAuthorWordMap,\n  currentContentWordMap,\n  loadExamples,\n  pencilState,\n  markerState,\n  saveState,\n  loadNewArticle,\n  saveCurrentArticle,\n  isPoetryFinished,\n  handleOpen,\n}) => {\n  const inspirationImgs = [imageOne, imageTwo, imageThree, imageFour];\n  return (\n    <div className={styles['center-inspiration']}>\n      <Header handleOpen={handleOpen} />\n      {isInspiration ? (<img src={inspirationImgs[getRandomNumberUpTo4()]} alt=\"\" />) : (\n        <>\n          <Title\n            entireCurrentArticleOF={entireCurrentArticleOF}\n            volNum={volNum}\n            isDisplayFromSaved={isDisplayFromSaved}\n            isPencilState={isPencilState}\n            isMarkerState={isMarkerState}\n            isPoetryFinished={isPoetryFinished}\n            currentTitleWordMap={currentTitleWordMap}\n            onClickHandler={onClickHandler}\n            onMouseOverHandler={onMouseOverHandler}\n          />\n          <Content\n            entireCurrentArticleOF={entireCurrentArticleOF}\n            isDisplayFromSaved={isDisplayFromSaved}\n            isPoetryFinished={isPoetryFinished}\n            isPencilState={isPencilState}\n            isMarkerState={isMarkerState}\n            currentAuthorWordMap={currentAuthorWordMap}\n            onClickHandler={onClickHandler}\n            onMouseOverHandler={onMouseOverHandler}\n            currentContentWordMap={currentContentWordMap}\n          />\n        </>\n      )}\n      <Stepper\n        loadNewArticle={loadNewArticle}\n        loadExamples={loadExamples}\n        pencilState={pencilState}\n        markerState={markerState}\n        saveState={saveState}\n        saveCurrentArticle={saveCurrentArticle}\n        isDisplayFromSaved={isDisplayFromSaved}\n      />\n    </div>\n  );\n};\n\nNewspaper.propTypes = {\n  volNum: PropTypes.number.isRequired,\n  isDisplayFromSaved: PropTypes.bool.isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  currentTitleWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({}),\n  ]).isRequired,\n  currentContentWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({}),\n  ]).isRequired,\n  currentAuthorWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({}),\n  ]).isRequired,\n  entireCurrentArticleOF: PropTypes.shape([]).isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  isInspiration: PropTypes.bool.isRequired,\n  handleOpen: PropTypes.func.isRequired,\n  isPoetryFinished: PropTypes.bool.isRequired,\n  loadExamples: PropTypes.func.isRequired,\n  pencilState: PropTypes.func.isRequired,\n  markerState: PropTypes.func.isRequired,\n  saveState: PropTypes.func.isRequired,\n  loadNewArticle: PropTypes.func.isRequired,\n  saveCurrentArticle: PropTypes.func.isRequired,\n};\n\nexport default Newspaper;\n","import React from 'react';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './SavedNewspaper.module.css';\n\nconst SavedNewspaper = ({ savedArticles, onSaveHandler, deleteSavedHandler }) => (\n  <Grid container className={styles['saved-newspapers-container']}>\n    {Object.keys(savedArticles).map((articleObj, i) => (\n      <Grid key={i} item className={styles['folded-bg']}>\n        <div\n          onClick={() => onSaveHandler(savedArticles[articleObj].entireCurrentArticleOF.id)}\n        >\n          <div className={styles['saved-title']}>\n            <Typography variant=\"subtitle1\">\n              {savedArticles[articleObj].entireCurrentArticleOF.title}\n            </Typography>\n          </div>\n          <Typography variant=\"body1\">\n            <span className={classNames(styles['main-font'], styles['saved-author'])}>\n              Author: {savedArticles[articleObj].entireCurrentArticleOF.author}\n            </span>\n          </Typography>\n          <Button\n            className={styles['delete-btn']}\n            type=\"button\"\n            size=\"small\"\n            onClick={() => deleteSavedHandler(\n              savedArticles[articleObj].entireCurrentArticleOF.id,\n            )}\n          >Delete\n          </Button>\n        </div>\n      </Grid>\n    ))}\n  </Grid>\n);\n\nSavedNewspaper.propTypes = {\n  savedArticles: PropTypes.shape([]).isRequired,\n  onSaveHandler: PropTypes.func.isRequired,\n  deleteSavedHandler: PropTypes.func.isRequired,\n};\n\nexport default SavedNewspaper;\n","import React from 'react';\nimport { Modal as ModalMUI } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.css';\n\nconst Modal = ({ handleClose, isOpen, isMobile }) => {\n  if (isMobile) {\n    return (\n      <div className={styles['video-container']}>\n        <iframe\n          title=\"instructions\"\n          src=\"https://www.youtube.com/embed/wKpVgoGr6kE\"\n        />\n      </div>\n    )\n  }\n  return (\n    <ModalMUI open={isOpen} onClose={handleClose}>\n      <div className={styles['video-container']} onClick={handleClose}>\n        <iframe className={styles.video} title=\"instructions\" src=\"https://www.youtube.com/embed/wKpVgoGr6kE\" />\n      </div>\n    </ModalMUI>\n  );\n\n}\n\nModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Drawer, List, ListItem, ListItemText } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst MobileNav = ({ isNavOpen, toggleNav, displayComponent }) => (\n  <Drawer open={isNavOpen} onClose={toggleNav}>\n    <div role=\"presentation\" onClick={toggleNav}>\n      <List>\n        {['Instructions', 'Newspaper', 'Saved'].map((text, index) => (\n          <ListItem button onClick={() => displayComponent(index)} key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  </Drawer>\n);\n\nMobileNav.propTypes = {\n  isNavOpen: PropTypes.bool.isRequired,\n  toggleNav: PropTypes.func.isRequired,\n  displayComponent: PropTypes.func.isRequired,\n};\n\nexport default MobileNav;\n","import React from 'react';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\n\nimport { MyDocument } from '../Newspaper/Sections/Content/Content';\n\nconst PrintableNewspaper = () => (\n  <div>\n    <PDFDownloadLink document={MyDocument} fileName=\"somename.pdf\">\n      {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n    </PDFDownloadLink>\n  </div>\n);\n\nexport default PrintableNewspaper;\n","import axios from 'axios';\n\nconst getLexperContent = async (urlFromNewsApi) => {\n  try {\n    const { data: { article: { text } } } = await axios.get('https://lexper.p.rapidapi.com/v1.1/extract', {\n      headers: { 'x-rapidapi-host': 'lexper.p.rapidapi.com', 'x-rapidapi-key': process.env.REACT_APP_X_RAPIDAPI_KEY },\n      params: { media: '1', url: urlFromNewsApi },\n    });\n\n    return text;\n  } catch (e) {\n    return e;\n  }\n};\n\nexport default getLexperContent;\n","import axios from 'axios';\n\nconst getArticles = async () => {\n  try {\n    const url = `https://newsapi.org/v2/everything?q=Tech&from=2020-01-01&sortBy=popularity&pageSize=10&apiKey=${process.env.REACT_APP_NEWS_API_KEY}`;\n\n    const { data: { articles } } = await axios.get(url);\n\n    return articles;\n  } catch (e) {\n    return e;\n  }\n};\n\nexport default getArticles;\n","import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport _ from 'lodash';\nimport Loader from 'react-loader';\nimport Uniqid from 'uniqid';\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport classNames from 'classnames';\nimport { createWordMap, getRandomNumber } from './utils';\nimport { Modal, Newspaper, SavedNewspaper, MobileNav } from './components';\nimport { getLexperContent, getArticles } from './api';\nimport styles from './App.module.css';\n\nconst isMobile = window.innerWidth <= 768;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalArticles: [],\n      savedArticles: {},\n      // Entire Current Article in Original Format (OF)\n      entireCurrentArticleOF: [],\n      currentTitleWordMap: [],\n      currentAuthorWordMap: [],\n      currentContentWordMap: [],\n      isInspiration: false,\n      isPencilState: false,\n      isMarkerState: false,\n      isLoading: true,\n      isDisplayFromSaved: false,\n      isPoetryFinished: false,\n      isOpen: isMobile ? true : false,\n      isNavOpen: false,\n      volNum: 1,\n      step: 0,\n    };\n  }\n\n  async componentDidMount() {\n    const articles = await getArticles();\n\n    const pendingContents = articles.map(async (article) => getLexperContent(article.url));\n    const fullContents = await Promise.all(pendingContents);\n\n    articles.forEach((article, i) => {\n      article.fullContentText = fullContents[i];\n      article.id = Uniqid();\n    });\n\n    this.setState({\n      totalArticles: articles,\n      entireCurrentArticleOF: {\n        ...articles[0],\n        fullContentText: articles[0].fullContentText,\n        id: articles[0].id,\n      },\n      currentTitleWordMap: createWordMap(articles[0].title),\n      currentAuthorWordMap: createWordMap(articles[0].author),\n      currentContentWordMap: createWordMap(articles[0].fullContentText),\n      isLoading: false,\n    });\n  }\n\n  pencilState = () => this.setState({\n    isPencilState: true,\n    isMarkerState: false,\n    isDisplayFromSaved: false,\n    isInspiration: false,\n    isPoetryFinished: false,\n  });\n\n  markerState = () => this.setState({\n    isPencilState: false,\n    isMarkerState: true,\n    isDisplayFromSaved: false,\n    isInspiration: false,\n    isPoetryFinished: false,\n  });\n\n  saveState = () => this.setState({\n    isPencilState: false,\n    isMarkerState: false,\n    isDisplayFromSaved: false,\n    isInspiration: false,\n    isPoetryFinished: true,\n  });\n\n  loadExamples = () => {\n    this.setState({\n      isInspiration: true,\n      isDisplayFromSaved: false,\n      isPoetryFinished: false,\n    });\n  };\n\n  loadNewArticle = async () => {\n    const { totalArticles, savedArticles, entireCurrentArticleOF } = this.state;\n\n    let randomNum = getRandomNumber();\n    if (!(_.isEmpty(savedArticles))) {\n      // console.log(savedArticles, \"savedArticles\")\n      while (totalArticles[randomNum].id in savedArticles) {\n        // console.log(totalArticles[randomNum].id, \" is in \", savedArticles, \"so lets find another number\")\n        randomNum = getRandomNumber();\n      }\n    }\n\n    this.setState({\n      volNum: randomNum,\n      isInspiration: false,\n      isMarkerState: false,\n      isPencilState: false,\n      isDisplayFromSaved: false,\n      isPoetryFinished: false,\n      entireCurrentArticleOF: {\n        ...totalArticles[randomNum],\n        fullContentText: totalArticles[randomNum].fullContentText,\n        id: totalArticles[randomNum].id,\n      },\n      currentTitleWordMap: createWordMap(totalArticles[randomNum].title),\n      currentAuthorWordMap: createWordMap(totalArticles[randomNum].author),\n      currentContentWordMap: createWordMap(\n        totalArticles[randomNum].fullContentText,\n      ),\n    });\n  };\n\n  saveCurrentArticle = () => {\n    const {\n      savedArticles,\n      currentTitleWordMap,\n      currentContentWordMap,\n      currentAuthorWordMap,\n      entireCurrentArticleOF,\n    } = this.state;\n\n    if (!savedArticles[entireCurrentArticleOF.id]) {\n      this.setState({\n        savedArticles: {\n          ...savedArticles,\n          [entireCurrentArticleOF.id]: {\n            currentTitleWordMap,\n            currentContentWordMap,\n            currentAuthorWordMap,\n            entireCurrentArticleOF,\n          },\n        },\n        isInspiration: false,\n        isMarkerState: false,\n        isPencilState: false,\n      });\n    } else {\n      this.setState({\n        savedArticles: {\n          ...savedArticles,\n          [entireCurrentArticleOF.id]: {\n            currentTitleWordMap,\n            currentContentWordMap,\n            currentAuthorWordMap,\n            entireCurrentArticleOF,\n            isInspiration: false,\n            isMarkerState: false,\n            isPencilState: false,\n          },\n        },\n      });\n    }\n  };\n\n  onClickHandler = (i, category) => {\n    const {\n      currentTitleWordMap,\n      currentAuthorWordMap,\n      currentContentWordMap,\n    } = this.state;\n\n    switch (category) {\n      case 'title':\n        this.setState((prevState) => ({\n          currentTitleWordMap: {\n            ...currentTitleWordMap,\n            [i]: {\n              ...currentTitleWordMap[i],\n              isClicked: !prevState.currentTitleWordMap[i].isClicked,\n            },\n          },\n        }));\n        break;\n      case 'author':\n        this.setState((prevState) => ({\n          currentAuthorWordMap: {\n            ...currentAuthorWordMap,\n            [i]: {\n              ...currentAuthorWordMap[i],\n              isClicked: !prevState.currentAuthorWordMap[i].isClicked,\n            },\n          },\n        }));\n        break;\n      case 'content':\n        this.setState((prevState) => ({\n          currentContentWordMap: {\n            ...currentContentWordMap,\n            [i]: {\n              ...currentContentWordMap[i],\n              isClicked: !prevState.currentContentWordMap[i].isClicked,\n            },\n          },\n        }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  onMouseOverHandler = (i, category) => {\n    const {\n      currentTitleWordMap,\n      currentAuthorWordMap,\n      currentContentWordMap,\n    } = this.state;\n\n    switch (category) {\n      case 'title':\n        this.setState({\n          currentTitleWordMap: {\n            ...currentTitleWordMap,\n            [i]: { ...currentTitleWordMap[i], isMouseOver: true },\n          },\n        });\n        break;\n      case 'author':\n        this.setState({\n          currentAuthorWordMap: {\n            ...currentAuthorWordMap,\n            [i]: { ...currentAuthorWordMap[i], isMouseOver: true },\n          },\n        });\n        break;\n      case 'content':\n        this.setState({\n          currentContentWordMap: {\n            ...currentContentWordMap,\n            [i]: { ...currentContentWordMap[i], isMouseOver: true },\n          },\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  downloadCurrentArticle = () => {\n    // MAKE A POST REQUEST TO THE BACKEND => SEND THE NECESSARY DATA\n    // ON BACKEND, CREATE A PDF BASED ON A TEMPLATE USING THAT DATA\n    // MAKE A GET REQUEST TO GET THAT BLOB BACK FROM THE BACKEND\n    // CONVERT A BLOB TO A PDF\n    // USE FILE-SAVER TO DOWNLOAD THAT PDF\n    // const pdf = null;\n\n    // axios.post('/route', { data })\n    //   .then(() => {\n    //     axios.get('/route')\n    //       .then((response) => {\n    //         pdf = response.data;\n    //       });\n    //   });\n  }\n\n  onSaveHandler = (i) => {\n    const { savedArticles } = this.state;\n\n    const {\n      currentAuthorWordMap: clickedAuthorWordMap,\n      currentTitleWordMap: clickedTitleWordMap,\n      currentContentWordMap: clickedContentWordMap,\n    } = savedArticles[i];\n\n    this.setState({\n      step: 1,\n      isDisplayFromSaved: true,\n      isPoetryFinished: false,\n      isInspiration: false,\n      currentAuthorWordMap: clickedAuthorWordMap,\n      currentTitleWordMap: clickedTitleWordMap,\n      currentContentWordMap: clickedContentWordMap,\n    });\n  };\n\n  deleteSavedHandler = (i) => {\n    const { savedArticles } = this.state;\n    const updatedSavedArticles = _.omit(savedArticles, i);\n    this.setState({ savedArticles: { ...updatedSavedArticles } });\n  };\n\n  handleOpen = () => {\n    this.setState({ isOpen: true });\n  };\n\n  handleClose = () => this.setState({ isOpen: false });\n\n  toggleNav = () => this.setState((prevState) => ({ isNavOpen: !prevState.isNavOpen }));\n\n  render() {\n    const {\n      entireCurrentArticleOF,\n      savedArticles,\n      isInspiration,\n      currentTitleWordMap,\n      currentAuthorWordMap,\n      currentContentWordMap,\n      volNum,\n      isPoetryFinished,\n      isDisplayFromSaved,\n      inspirationImg,\n      isPencilState,\n      isMarkerState,\n      isLoading,\n      isNavOpen,\n      isOpen,\n      step,\n    } = this.state;\n\n    const displayComponent = (i) => {\n      switch (i) {\n        case 0:\n          this.setState({ step: 0 });\n          break;\n        case 1:\n          this.setState({ step: 1 });\n          break;\n        case 2:\n          this.setState({ step: 2 });\n          break;\n        default:\n          break;\n      }\n    };\n\n    const componentToBeRendered = () => {\n      switch (step) {\n        case 0:\n          return (\n            <Modal handleClose={this.handleClose} isOpen={isOpen} isMobile={isMobile} />\n          );\n        case 1:\n          return (\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={7}\n              lg={7}\n              lx={7}\n              className={styles['newspaper-container']}\n            >\n              <Newspaper\n                volNum={volNum}\n                entireCurrentArticleOF={entireCurrentArticleOF}\n                isPencilState={isPencilState}\n                isMarkerState={isMarkerState}\n                isInspiration={isInspiration}\n                isDisplayFromSaved={isDisplayFromSaved}\n                inspirationImg={inspirationImg}\n                currentTitleWordMap={currentTitleWordMap}\n                currentAuthorWordMap={currentAuthorWordMap}\n                isPoetryFinished={isPoetryFinished}\n                currentContentWordMap={currentContentWordMap}\n                onClickHandler={this.onClickHandler}\n                onMouseOverHandler={this.onMouseOverHandler}\n                loadNewArticle={this.loadNewArticle}\n                loadExamples={this.loadExamples}\n                pencilState={this.pencilState}\n                markerState={this.markerState}\n                saveState={this.saveState}\n                saveCurrentArticle={this.saveCurrentArticle}\n              />\n            </Grid>\n          );\n        case 2:\n          return (\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={3}\n              lg={3}\n              className={styles['saved-newspapers-container']}\n            >\n              <SavedNewspaper\n                onSaveHandler={this.onSaveHandler}\n                savedArticles={savedArticles}\n                volNum={volNum}\n                deleteSavedHandler={this.deleteSavedHandler}\n                isPoetryFinished={isPoetryFinished}\n              />\n            </Grid>\n          );\n        default:\n          return null;\n      }\n    };\n\n    if (_.isEmpty(entireCurrentArticleOF)) {\n      return (\n        <Grid container className={styles['main-container']}>\n          <Loader\n            loaded={false}\n            scale={2.0}\n            top=\"50%\"\n            left=\"50%\"\n            position=\"relative\"\n            loadedClassName={styles.loader}\n          />\n        </Grid>\n      );\n    }\n\n    if (isMobile) {\n      return (\n        <>\n          <Button\n            type=\"button\"\n            className={styles['nav-container']}\n            onClick={this.toggleNav}\n          >\n            <DehazeIcon />\n          </Button>\n          <MobileNav\n            toggleNav={this.toggleNav}\n            isNavOpen={isNavOpen}\n            displayComponent={displayComponent}\n          />\n          {\n            componentToBeRendered() || <Modal handleClose={this.handleClose} isOpen={isOpen} isMobile={isMobile} />\n          }\n        </>\n      );\n    }\n\n    return (\n      <Grid container className={styles['main-container']}>\n        <Modal handleClose={this.handleClose} isOpen={isOpen} />\n        <Grid item className={styles['bg-showing-vl']} md={2} lg={2} lx={2}>\n          <Button\n            className={styles['learnmore-app-vl']}\n            variant='contained'\n            size='large'\n            onClick={this.handleOpen}\n          >\n            Learn more\n          </Button>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={7}\n          md={7}\n          lg={7}\n          lx={7}\n          className={classNames(styles['newspaper-container'], isLoading ? styles.loader : '')}\n        >\n          <Newspaper\n            volNum={volNum}\n            entireCurrentArticleOF={entireCurrentArticleOF}\n            isPencilState={isPencilState}\n            isMarkerState={isMarkerState}\n            isInspiration={isInspiration}\n            isDisplayFromSaved={isDisplayFromSaved}\n            isPoetryFinished={isPoetryFinished}\n            inspirationImg={inspirationImg}\n            currentTitleWordMap={currentTitleWordMap}\n            currentAuthorWordMap={currentAuthorWordMap}\n            currentContentWordMap={currentContentWordMap}\n            onClickHandler={this.onClickHandler}\n            onMouseOverHandler={this.onMouseOverHandler}\n            loadNewArticle={this.loadNewArticle}\n            loadExamples={this.loadExamples}\n            pencilState={this.pencilState}\n            markerState={this.markerState}\n            saveState={this.saveState}\n            saveCurrentArticle={this.saveCurrentArticle}\n            handleOpen={this.handleOpen}\n          />\n        </Grid>\n        <Grid item xs={12} sm={3} md={3} lg={3}>\n          <SavedNewspaper\n            onSaveHandler={this.onSaveHandler}\n            savedArticles={savedArticles}\n            volNum={volNum}\n            deleteSavedHandler={this.deleteSavedHandler}\n            isPoetryFinished={isPoetryFinished}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2h8CC\",\"main-container\":\"App_main-container__2zY39\",\"newspaper-container\":\"App_newspaper-container__1Py5N\",\"loader\":\"App_loader__2fptQ\",\"bg-showing-hl\":\"App_bg-showing-hl__3ydrM\",\"bg-showing-vl\":\"App_bg-showing-vl__2mkOO\",\"learnmore-app-vl\":\"App_learnmore-app-vl__1yMEt\",\"learnmore-app-hl\":\"App_learnmore-app-hl__2CvfC\",\"nav-container\":\"App_nav-container__1tCY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-container\":\"Content_content-container__3Fmc-\",\"scroll\":\"Content_scroll__2evwr\",\"text\":\"Content_text__paTER\",\"pencil-style\":\"Content_pencil-style__2reg7\",\"marker-style\":\"Content_marker-style__7UrPq\",\"author\":\"Content_author__3X8Tl\",\"image\":\"Content_image__3-JPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-vol-container\":\"Title_date-vol-container__1Uah-\",\"title-container\":\"Title_title-container__s2E9e\",\"article-title\":\"Title_article-title__3nzKi\",\"date\":\"Title_date__22lCe\",\"vol\":\"Title_vol__1g2kn\",\"pencil-style\":\"Title_pencil-style__3rr_v\",\"marker-style\":\"Title_marker-style__BqGkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"saved-newspapers-container\":\"SavedNewspaper_saved-newspapers-container__1_wSq\",\"folded-bg\":\"SavedNewspaper_folded-bg__ATTQE\",\"saved-title\":\"SavedNewspaper_saved-title__1UW9G\",\"saved-author\":\"SavedNewspaper_saved-author__1NJlr\",\"delete-btn\":\"SavedNewspaper_delete-btn__3HjlI\"};"],"sourceRoot":""}