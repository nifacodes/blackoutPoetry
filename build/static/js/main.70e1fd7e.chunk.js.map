{"version":3,"sources":["utils/index.js","components/Stepper/Stepper.js","components/Newspaper/Sections/Title/Title.js","components/Newspaper/Sections/Header/Header.js","components/Newspaper/Sections/Content/Content.js","components/Newspaper/Newspaper.js","components/SavedNewspaper/SavedNewspaper.js","components/Modal/Modal.js","components/MobileNav/MobileNav.js","api/lexperApi.js","api/newsApi.js","App.js","index.js","img/1.png","img/2.png","img/3.png","img/4.png"],"names":["createWordMap","str","split","map","word","isClicked","isMouseOver","browseSentence","className","lightBulbSentence","saveSentence","boxWords","blackOutWords","useColorlibStepIconStyles","makeStyles","root","backgroundColor","zIndex","color","width","height","display","borderRadius","justifyContent","alignItems","active","backgroundImage","boxShadow","completed","ColorlibConnector","withStyles","alternativeLabel","top","line","flexWrap","border","StepConnector","Stepper","loadExamples","loadNewArticle","pencilState","isDisplayFromSaved","markerState","isPoetryFinished","saveState","saveCurrentArticle","useState","activeStep","setActiveStep","steps","handleReset","ColorlibStepIcon","props","classes","clsx","1","2","3","4","5","String","icon","Button","onClick","connector","label","Step","key","StepLabel","StepIconComponent","Typography","stepIndex","getStepContent","length","variant","Title","publishedAt","entireCurrentArticleOF","currentTitleWordMap","isPencilState","isMarkerState","onMouseOverHandler","onClickHandler","volNum","date","Date","dateString","getDate","getMonth","getFullYear","pencilHandler","markerHandler","isWordUsed","title","Object","keys","e","i","onMouseOver","onFocus","Grid","container","item","xs","Header","md","lg","Content","currentContentWordMap","content","alt","src","urlToImage","author","Newspaper","isInspiration","currentAuthorWordMap","inspirationImgs","imageOne","imageTwo","imageThree","imageFour","console","log","Math","floor","random","SavedNewspaper","savedArticles","onSaveHandler","deleteSavedHandler","articleObj","id","type","Modal","handleClose","isOpen","open","onClose","MobileNav","isNavOpen","toggleNav","displayComponent","Drawer","role","List","text","index","ListItem","button","ListItemText","primary","getLexperContent","urlFromNewsApi","a","async","axios","get","headers","process","params","media","url","data","article","getArticles","articles","isMobile","window","innerWidth","App","setState","totalArticles","state","randomNum","fullContentText","category","prevState","clickedAuthorWordMap","clickedTitleWordMap","clickedContentWordMap","updatedSavedArticles","_","omit","handleOpen","isLoading","step","pendingContents","Promise","all","fullContents","forEach","Uniqid","this","inspirationImg","isEmpty","loaded","scale","left","position","loadedClassName","sm","lx","componentToBeRendered","size","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.70e1fd7e.chunk.js","sourcesContent":["export const createWordMap = (str) => str.split(' ').map((word) => ({ word, isClicked: false, isMouseOver: false }));\n\nexport const getRandomNumber = () => Math.floor(Math.random() * 9);\n\nexport const getRandomNumberUpTo4 = () => Math.floor(Math.random() * 3);\n","import React, { useState } from \"react\";\nimport {\n  Stepper as MUIStepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n  FormHelperText\n} from \"@material-ui/core\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport \"./Stepper.css\";\n//----------------------------------------\nconst getSteps = () => [\n  \"Get Inspired\",\n  \"Browse Articles\",\n  \"Box the words\",\n  \"Black-out the Rest\",\n  \"Save Poetry\"\n];\n\nconst browseSentence = (\n  <span className='main-font'>\n    Click the Plus button below to browse through articles, choose one you like!\n  </span>\n);\n\nconst lightBulbSentence = (\n  <span className='main-font'>\n    Click the Lightbulb button below to see real examples. <br /> Once you are\n    inspired, click Next button to choose your own article.\n  </span>\n);\n\nconst saveSentence = (\n  <span className='main-font'>\n    Congrats you completed your First Poetry...Great! <br /> If you want to save\n    this, click the Save button below or click Finish!\n  </span>\n);\n\nconst boxWords = (\n  <span className='main-font'>\n    Find words from the article that you like. Click them to 'box the word'.\n    This will form your poem. Once you're done, click Next to continue\n  </span>\n);\n\nconst blackOutWords = (\n  <span className='main-font'>\n    Hover over the rest of the words to black them out! Once you're done, click\n    Next to continue\n  </span>\n);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: \"#ccc\",\n    zIndex: 1,\n    color: \"#fff\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  active: {\n    backgroundImage:\n      \"linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\",\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\"\n  },\n  completed: {\n    backgroundImage:\n      \"linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\"\n  }\n});\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\"\n    }\n  },\n  completed: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient(to right, #093028, #237a57); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\"\n    }\n  },\n  line: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    height: 3,\n    border: 0,\n    backgroundColor: \"#eaeaf0\",\n    borderRadius: 1\n  }\n})(StepConnector);\n\nconst getStepContent = stepIndex => {\n  switch (stepIndex) {\n    case 0:\n      return lightBulbSentence;\n    case 1:\n      return browseSentence;\n    case 2:\n      return boxWords;\n    case 3:\n      return blackOutWords;\n    case 4:\n      return saveSentence;\n\n    default:\n      return \"Unknown stepIndex\";\n  }\n};\n\nconst Stepper = ({\n  loadExamples,\n  loadNewArticle,\n  pencilState,\n  isDisplayFromSaved,\n  isPoetryFinished,\n  markerState,\n  saveState,\n  saveCurrentArticle\n}) => {\n  // useState returns an array with two values\n  // (one being the state property (activeStep) and the second being the setter function for that state) (setActive)\n  // we can also specify the default value for the state property (activeStep), useState takes in a default value\n  const [activeStep, setActiveStep] = useState(0);\n\n  const steps = getSteps();\n\n  const handleNext = () => {\n    switch (activeStep) {\n      case 0:\n        loadNewArticle();\n        break;\n      case 1:\n        pencilState();\n        break;\n      case 2:\n        markerState();\n        break;\n      case 3:\n        saveState();\n        break;\n      default:\n        break;\n    }\n\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    loadNewArticle();\n  };\n\n  function ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n\n    const { active, completed } = props;\n\n    const icons = {\n      1: 1,\n      2: 2,\n      3: 3,\n      4: 4,\n      5: 5\n    };\n\n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n          [classes.completed]: completed\n        })}\n      >\n        {icons[String(props.icon)]}\n      </div>\n    );\n  }\n\n  return isDisplayFromSaved ? (\n    <Button className='next-btn reset-btn' onClick={handleReset}>\n      Reset\n    </Button>\n  ) : (\n    <div className='root'>\n      <MUIStepper\n        className='stepper'\n        activeStep={activeStep}\n        alternativeLabel\n        connector={<ColorlibConnector />}\n      >\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </MUIStepper>\n      <div className='info'>\n        <div>\n          <Typography className='instructions'>\n            {getStepContent(activeStep)}\n          </Typography>\n          {activeStep === 0 ? (\n            <Button className='btn' onClick={loadExamples}>\n              <i className='fas fa-2x fa-lightbulb' />\n            </Button>\n          ) : null}\n          {activeStep === 1 ? (\n            <Button className='btn' onClick={loadNewArticle}>\n              <i className='fas fa-2x fa-plus-circle' />\n            </Button>\n          ) : null}\n          {activeStep === 4 ? (\n            <Button className='btn' onClick={saveCurrentArticle}>\n              {\" \"}\n              <i className='fas fa-2x fa-save' />{\" \"}\n            </Button>\n          ) : null}\n          {activeStep === steps.length - 1 ? (\n            <Button\n              className='next-btn'\n              variant='contained'\n              onClick={handleReset}\n            >\n              Finish\n            </Button>\n          ) : (\n            <Button\n              className='next-btn'\n              variant='contained'\n              onClick={handleNext}\n            >\n              Next\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStepper.propTypes = {\n  loadExamples: PropTypes.func.isRequired,\n  loadNewArticle: PropTypes.func.isRequired,\n  pencilState: PropTypes.func.isRequired,\n  markerState: PropTypes.func.isRequired,\n  saveState: PropTypes.func.isRequired,\n  saveCurrentArticle: PropTypes.func.isRequired\n};\n\nexport default Stepper;\n","/* eslint-disable no-nested-ternary */\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Title.css\";\n\nconst Title = ({\n  entireCurrentArticleOF: { publishedAt },\n  isDisplayFromSaved,\n  currentTitleWordMap,\n  isPencilState,\n  isPoetryFinished,\n  isMarkerState,\n  onMouseOverHandler,\n  onClickHandler,\n  volNum\n}) => {\n  const date = new Date(publishedAt);\n  const dateString = `${date.getDate()}/${date.getMonth() +\n    1}/${date.getFullYear()}`;\n\n  let pencilHandler = null;\n  let markerHandler = null;\n  let isWordUsed = true;\n\n  if (isPencilState) {\n    pencilHandler = onClickHandler;\n  } else if (isMarkerState) {\n    markerHandler = onMouseOverHandler;\n  }\n\n  const title = Object.keys(currentTitleWordMap).map((e, i) => {\n    if (isDisplayFromSaved || isPoetryFinished) {\n      isWordUsed =\n        currentTitleWordMap[i].isClicked || currentTitleWordMap[i].isMouseOver;\n    }\n\n    return isWordUsed ? (\n      <span\n        key={i}\n        onClick={() => (pencilHandler ? pencilHandler(i, \"title\") : null)}\n        onMouseOver={() => (markerHandler ? markerHandler(i, \"title\") : null)}\n        onFocus={() => (markerHandler ? markerHandler(i, \"title\") : null)}\n        className={\n          currentTitleWordMap[i].isClicked\n            ? \"pencil-style\"\n            : currentTitleWordMap[i].isMouseOver\n            ? \"marker-style\"\n            : null\n        }\n      >\n        <strong className='title-main'>{`${currentTitleWordMap[i].word} `}</strong>\n      </span>\n    ) : null;\n  });\n\n  return (\n    <>\n      <Grid container className='title-container'>\n        <Grid\n          item\n          xs={6}\n          className='date'\n        >{`Published on: ${dateString}`}</Grid>\n        <Grid\n          item\n          xs={6}\n          className='date-second'\n        >{`Vol. 1 No. ${volNum}`}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12} className='title'>\n          <Typography variant='h4' className='title-text'>\n            {title}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nTitle.propTypes = {\n  entireCurrentArticleOF: PropTypes.shape({\n    publishedAt: PropTypes.string.isRequired\n  }).isRequired,\n  currentTitleWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({})\n  ]).isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  volNum: PropTypes.number.isRequired\n};\n\nexport default Title;\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nimport \"./Header.css\";\n\nconst Header = () => (\n  <Grid container>\n    <Grid item xs={12} md={8} className='header-title'>\n      <Typography variant='h3'>\n        <span>B</span>\n        <span className='title-main'>LACKOUT</span>\n      </Typography>\n      <Typography variant='h3'>\n        <span className='second-span'>P</span>\n        <span className='title-main'>OETRY</span>\n      </Typography>\n    </Grid>\n    <Grid item xs={12} md={8} lg={4} className='side-info'>\n      <Typography variant='subtitle1'>\n        <strong className='title-main'>Inspiration - </strong>\n        <p className='main-font'>Austin Kleon </p>\n      </Typography>\n      <Typography variant='subtitle1'>\n        <strong className='title-main'>Powered By - </strong>\n        <p className='main-font'>NewsAPI and LexperAPI</p>\n      </Typography>\n    </Grid>\n  </Grid>\n);\n\nexport default Header;\n","/* eslint-disable no-nested-ternary */\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport './Content.css';\n\nconst Content = ({\n  entireCurrentArticleOF,\n  currentContentWordMap,\n  onMouseOverHandler,\n  onClickHandler,\n  isMarkerState,\n  isPencilState,\n  isPoetryFinished,\n  isDisplayFromSaved\n}) => {\n  let pencilHandler = null;\n  let markerHandler = null;\n  let isWordUsed = true;\n\n  if (isPencilState) {\n    pencilHandler = onClickHandler;\n  } else if (isMarkerState) {\n    markerHandler = onMouseOverHandler;\n  }\n\n  const content = Object.keys(currentContentWordMap).map((e, i) => {\n    if (isDisplayFromSaved || isPoetryFinished) {\n      isWordUsed = currentContentWordMap[i].isClicked ||\n        currentContentWordMap[i].isMouseOver;\n    }\n\n    return isWordUsed ? (\n      <span\n        key={i}\n        onClick={() => (pencilHandler ? pencilHandler(i, \"content\") : null)}\n        onMouseOver={() => (markerHandler ? markerHandler(i, \"content\") : null)}\n        onFocus={() => (markerHandler ? markerHandler(i, \"content\") : null)}\n        className={\n          currentContentWordMap[i].isClicked\n            ? \"pencil-style\"\n            : currentContentWordMap[i].isMouseOver\n              ? \"marker-style\"\n              : null\n        }\n      >\n        <span className='main-font'>{`${currentContentWordMap[i].word} `}</span>\n      </span>\n    ) : null;\n  });\n\n  return (\n    <Grid container className='content-container'>\n      <Grid item xs={12} className='scroll'>\n        {!isDisplayFromSaved && !isPoetryFinished ? (\n          <img\n            alt='article'\n            src={entireCurrentArticleOF.urlToImage}\n            className='image'\n          />\n        ) : null}\n        <Typography variant='subtitle1' className='text'>\n          {content}\n        </Typography>\n        <div className='author'>\n          {!isDisplayFromSaved && !isPoetryFinished ? <Typography variant='h6'>\n            <span className='main-font'>{entireCurrentArticleOF.author}</span>\n          </Typography> : null}\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Content;\n\nContent.propTypes = {\n  entireCurrentArticleOF: PropTypes.shape({\n    publishedAt: PropTypes.string.isRequired,\n    urlToImage: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired\n  }).isRequired,\n  currentContentWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({}),\n  ]).isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isDisplayFromSaved: PropTypes.bool.isRequired,\n  isPoetryFinished: PropTypes.bool.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Newspaper.css\";\nimport { Header, Title, Content } from \"./Sections\";\n\nimport Stepper from \"../Stepper/Stepper\";\n\nimport { getRandomNumberUpTo4 } from \"../../utils\";\n\nimport imageOne from \"../../img/1.png\";\nimport imageTwo from \"../../img/2.png\";\nimport imageThree from \"../../img/3.png\";\nimport imageFour from \"../../img/4.png\";\n\nconst Newspaper = ({\n  entireCurrentArticleOF,\n  isDisplayFromSaved,\n  isPencilState,\n  isMarkerState,\n  volNum,\n  currentTitleWordMap,\n  onClickHandler,\n  onMouseOverHandler,\n  isInspiration,\n  currentAuthorWordMap,\n  currentContentWordMap,\n  loadExamples,\n  pencilState,\n  markerState,\n  saveState,\n  loadNewArticle,\n  saveCurrentArticle,\n  isPoetryFinished\n}) => {\n  const inspirationImgs = [imageOne, imageTwo, imageThree, imageFour];\n\n  console.log(isInspiration);\n\n  return (\n    <div className='center-inspiration'>\n      <Header />\n      {isInspiration ? (\n        <img src={inspirationImgs[getRandomNumberUpTo4()]} alt='' />\n      ) : (\n        <>\n          <Title\n            entireCurrentArticleOF={entireCurrentArticleOF}\n            volNum={volNum}\n            isDisplayFromSaved={isDisplayFromSaved}\n            isPencilState={isPencilState}\n            isMarkerState={isMarkerState}\n            isPoetryFinished={isPoetryFinished}\n            currentTitleWordMap={currentTitleWordMap}\n            onClickHandler={onClickHandler}\n            onMouseOverHandler={onMouseOverHandler}\n          />\n          <Content\n            entireCurrentArticleOF={entireCurrentArticleOF}\n            isDisplayFromSaved={isDisplayFromSaved}\n            isPoetryFinished={isPoetryFinished}\n            isPencilState={isPencilState}\n            isMarkerState={isMarkerState}\n            currentAuthorWordMap={currentAuthorWordMap}\n            onClickHandler={onClickHandler}\n            onMouseOverHandler={onMouseOverHandler}\n            currentContentWordMap={currentContentWordMap}\n          />\n        </>\n      )}\n      <Stepper\n        loadNewArticle={loadNewArticle}\n        loadExamples={loadExamples}\n        pencilState={pencilState}\n        markerState={markerState}\n        saveState={saveState}\n        saveCurrentArticle={saveCurrentArticle}\n        isDisplayFromSaved={isDisplayFromSaved}\n      />\n    </div>\n  );\n};\n\nNewspaper.propTypes = {\n  volNum: PropTypes.number.isRequired,\n  isDisplayFromSaved: PropTypes.bool.isRequired,\n  isPencilState: PropTypes.bool.isRequired,\n  isMarkerState: PropTypes.bool.isRequired,\n  currentTitleWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({})\n  ]).isRequired,\n  currentContentWordMap: PropTypes.oneOfType([\n    PropTypes.instanceOf(Array),\n    PropTypes.shape({})\n  ]).isRequired,\n  entireCurrentArticleOF: PropTypes.shape([]).isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  onMouseOverHandler: PropTypes.func.isRequired,\n  isInspiration: PropTypes.bool.isRequired,\n  loadExamples: PropTypes.func.isRequired,\n  pencilState: PropTypes.func.isRequired,\n  markerState: PropTypes.func.isRequired,\n  saveState: PropTypes.func.isRequired,\n  loadNewArticle: PropTypes.func.isRequired,\n  saveCurrentArticle: PropTypes.func.isRequired\n};\n\nexport default Newspaper;\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"./SavedNewspaper.css\";\n\nconst SavedNewspaper = ({\n  savedArticles,\n  onSaveHandler,\n  deleteSavedHandler\n}) => (\n    <Grid container className='saved-newspapers-container'>\n      {Object.keys(savedArticles).map((articleObj, i) => (\n        <Grid key={i} item className='folded-bg'>\n          <div\n            className='saved-container'\n            onClick={() =>\n              onSaveHandler(savedArticles[articleObj].entireCurrentArticleOF.id)\n            }\n          >\n            <Typography variant='subtitle1'>\n              <div className='saved-title'>\n                {savedArticles[articleObj].entireCurrentArticleOF.title}\n              </div>\n            </Typography>\n            <Typography variant='body1'>\n              <div className='main-font saved-author'>\n                Author: {savedArticles[articleObj].entireCurrentArticleOF.author}\n              </div>\n            </Typography>\n\n            <button\n              className='btn delete-btn'\n              type='button'\n              onClick={() =>\n                deleteSavedHandler(\n                  savedArticles[articleObj].entireCurrentArticleOF.id\n                )\n              }\n            >\n              Delete\n          </button>\n\n          </div>\n\n        </Grid>\n      ))}\n    </Grid>\n  );\n\nSavedNewspaper.propTypes = {\n  savedArticles: PropTypes.shape([]).isRequired,\n  onSaveHandler: PropTypes.func.isRequired,\n  deleteSavedHandler: PropTypes.func.isRequired\n};\n\nexport default SavedNewspaper;\n","import React from 'react';\nimport { Modal as ModalMUI } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\n\nconst Modal = ({ handleClose, isOpen }) => (\n  <ModalMUI open={isOpen} onClose={handleClose}>\n    <div className=\"video-container\" onClick={handleClose}>\n      <iframe className=\"video\" title=\"instructions\" src=\"https://www.youtube.com/embed/wKpVgoGr6kE\" />\n    </div>\n  </ModalMUI>\n);\n\nModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Drawer, List, ListItem, ListItemText } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport './MobileNav.css';\n\nconst MobileNav = ({ isNavOpen, toggleNav, displayComponent }) => (\n  <Drawer open={isNavOpen} onClose={toggleNav}>\n    <div role=\"presentation\" onClick={toggleNav}>\n      <List>\n        {['Instructions', 'Newspaper', 'Saved'].map((text, index) => (\n          <ListItem button onClick={() => displayComponent(index)} key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  </Drawer>\n);\n\nMobileNav.propTypes = {\n  isNavOpen: PropTypes.bool.isRequired,\n  toggleNav: PropTypes.func.isRequired,\n  displayComponent: PropTypes.func.isRequired,\n};\n\nexport default MobileNav;\n","import axios from \"axios\";\n\nconst getLexperContent = async urlFromNewsApi => {\n  try {\n    const { data: { article: { text } } } = await axios.get(\"https://lexper.p.rapidapi.com/v1.1/extract\", {\n      headers: { \"x-rapidapi-host\": \"lexper.p.rapidapi.com\", \"x-rapidapi-key\": process.env.REACT_APP_X_RAPIDAPI_KEY },\n      params: { media: \"1\", url: urlFromNewsApi }\n    });\n\n    return text;\n  } catch (e) {\n    return e;\n  }\n};\n\nexport default getLexperContent;\n","import axios from 'axios';\n\nconst getArticles = async () => {\n  try {\n    const url = `https://newsapi.org/v2/everything?q=Tech&from=2020-01-01&sortBy=popularity&pageSize=10&apiKey=${process.env.REACT_APP_NEWS_API_KEY}`;\n\n    const { data: { articles } } = await axios.get(url);\n\n    return articles;\n  } catch (e) {\n    return e;\n  }\n};\n\nexport default getArticles;\n","import React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport Loader from \"react-loader\";\nimport Uniqid from \"uniqid\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { createWordMap, getRandomNumber } from \"./utils\";\nimport { Modal, Newspaper, SavedNewspaper, MobileNav } from \"./components\";\nimport { getLexperContent, getArticles } from \"./api\";\nimport \"./App.css\";\n// import styles from \"./App.Module.css\"\nconst isMobile = window.innerWidth <= 768;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalArticles: [],\n      savedArticles: {},\n      entireCurrentArticleOF: [],\n      currentTitleWordMap: [],\n      currentAuthorWordMap: [],\n      currentContentWordMap: [],\n      isInspiration: false,\n      isPencilState: false,\n      isMarkerState: false,\n      isLoading: true,\n      isDisplayFromSaved: false,\n      isPoetryFinished: false,\n      isOpen: false,\n      isNavOpen: false,\n      volNum: 1,\n      step: 0\n    };\n  }\n\n  async componentDidMount() {\n    const articles = await getArticles();\n\n    const pendingContents = articles.map(async article =>\n      getLexperContent(article.url)\n    );\n    const fullContents = await Promise.all(pendingContents);\n\n    articles.forEach((article, i) => {\n      article.fullContentText = fullContents[i];\n      article.id = Uniqid();\n    });\n\n    this.setState({\n      totalArticles: articles,\n      entireCurrentArticleOF: {\n        ...articles[0],\n        fullContentText: articles[0].fullContentText,\n        id: articles[0].id\n      },\n      currentTitleWordMap: createWordMap(articles[0].title),\n      currentAuthorWordMap: createWordMap(articles[0].author),\n      currentContentWordMap: createWordMap(articles[0].fullContentText),\n      isLoading: false\n    });\n  }\n\n  pencilState = () =>\n    this.setState({\n      isPencilState: true,\n      isMarkerState: false,\n      isDisplayFromSaved: false,\n      isInspiration: false,\n      isPoetryFinished: false\n    });\n\n  markerState = () =>\n    this.setState({\n      isPencilState: false,\n      isMarkerState: true,\n      isDisplayFromSaved: false,\n      isInspiration: false,\n      isPoetryFinished: false\n    });\n\n  saveState = () =>\n    this.setState({\n      isPencilState: false,\n      isMarkerState: false,\n      isDisplayFromSaved: false,\n      isInspiration: false,\n      isPoetryFinished: true\n    });\n\n  loadExamples = () => {\n    console.log(\"examples\");\n    this.setState({\n      isInspiration: true,\n      isDisplayFromSaved: false,\n      isPoetryFinished: false\n    });\n  };\n\n  loadNewArticle = async () => {\n    const { totalArticles } = this.state;\n\n    const randomNum = getRandomNumber();\n\n    this.setState({\n      volNum: randomNum,\n      isInspiration: false,\n      isMarkerState: false,\n      isPencilState: false,\n      isDisplayFromSaved: false,\n      isPoetryFinished: false,\n      entireCurrentArticleOF: {\n        ...totalArticles[randomNum],\n        fullContentText: totalArticles[randomNum].fullContentText,\n        id: totalArticles[randomNum].id\n      },\n      currentTitleWordMap: createWordMap(totalArticles[randomNum].title),\n      currentAuthorWordMap: createWordMap(totalArticles[randomNum].author),\n      currentContentWordMap: createWordMap(\n        totalArticles[randomNum].fullContentText\n      )\n    });\n  };\n\n  saveCurrentArticle = () => {\n    const {\n      savedArticles,\n      currentTitleWordMap,\n      currentContentWordMap,\n      currentAuthorWordMap,\n      entireCurrentArticleOF\n    } = this.state;\n\n    console.log(\"here\");\n\n    if (!savedArticles[entireCurrentArticleOF.id]) {\n      this.setState({\n        savedArticles: {\n          ...savedArticles,\n          [entireCurrentArticleOF.id]: {\n            currentTitleWordMap,\n            currentContentWordMap,\n            currentAuthorWordMap,\n            entireCurrentArticleOF\n          }\n        },\n        isInspiration: false,\n        isMarkerState: false,\n        isPencilState: false\n      });\n    } else {\n      this.setState({\n        savedArticles: {\n          ...savedArticles,\n          [entireCurrentArticleOF.id]: {\n            currentTitleWordMap,\n            currentContentWordMap,\n            currentAuthorWordMap,\n            entireCurrentArticleOF,\n            isInspiration: false,\n            isMarkerState: false,\n            isPencilState: false\n          }\n        }\n      });\n    }\n  };\n\n  onClickHandler = (i, category) => {\n    const {\n      currentTitleWordMap,\n      currentAuthorWordMap,\n      currentContentWordMap\n    } = this.state;\n\n    switch (category) {\n      case \"title\":\n        this.setState(prevState => ({\n          currentTitleWordMap: {\n            ...currentTitleWordMap,\n            [i]: {\n              ...currentTitleWordMap[i],\n              isClicked: !prevState.currentTitleWordMap[i].isClicked\n            }\n          }\n        }));\n        break;\n      case \"author\":\n        this.setState(prevState => ({\n          currentAuthorWordMap: {\n            ...currentAuthorWordMap,\n            [i]: {\n              ...currentAuthorWordMap[i],\n              isClicked: !prevState.currentAuthorWordMap[i].isClicked\n            }\n          }\n        }));\n        break;\n      case \"content\":\n        this.setState(prevState => ({\n          currentContentWordMap: {\n            ...currentContentWordMap,\n            [i]: {\n              ...currentContentWordMap[i],\n              isClicked: !prevState.currentContentWordMap[i].isClicked\n            }\n          }\n        }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  onMouseOverHandler = (i, category) => {\n    const {\n      currentTitleWordMap,\n      currentAuthorWordMap,\n      currentContentWordMap\n    } = this.state;\n\n    switch (category) {\n      case \"title\":\n        this.setState({\n          currentTitleWordMap: {\n            ...currentTitleWordMap,\n            [i]: { ...currentTitleWordMap[i], isMouseOver: true }\n          }\n        });\n        break;\n      case \"author\":\n        this.setState({\n          currentAuthorWordMap: {\n            ...currentAuthorWordMap,\n            [i]: { ...currentAuthorWordMap[i], isMouseOver: true }\n          }\n        });\n        break;\n      case \"content\":\n        this.setState({\n          currentContentWordMap: {\n            ...currentContentWordMap,\n            [i]: { ...currentContentWordMap[i], isMouseOver: true }\n          }\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  onSaveHandler = i => {\n    const { savedArticles } = this.state;\n\n    const {\n      currentAuthorWordMap: clickedAuthorWordMap,\n      currentTitleWordMap: clickedTitleWordMap,\n      currentContentWordMap: clickedContentWordMap\n    } = savedArticles[i];\n\n    this.setState({\n      isDisplayFromSaved: true,\n      isPoetryFinished: false,\n      isInspiration: false,\n      currentAuthorWordMap: clickedAuthorWordMap,\n      currentTitleWordMap: clickedTitleWordMap,\n      currentContentWordMap: clickedContentWordMap\n    });\n  };\n\n  deleteSavedHandler = i => {\n    const { savedArticles } = this.state;\n\n    const updatedSavedArticles = _.omit(savedArticles, i);\n\n    this.setState({ savedArticles: { ...updatedSavedArticles } });\n  };\n\n  handleOpen = () => this.setState({ isOpen: true });\n\n  handleClose = () => this.setState({ isOpen: false });\n\n  toggleNav = () =>\n    this.setState(prevState => ({ isNavOpen: !prevState.isNavOpen }));\n\n  render() {\n    const {\n      entireCurrentArticleOF,\n      savedArticles,\n      isInspiration,\n      currentTitleWordMap,\n      currentAuthorWordMap,\n      currentContentWordMap,\n      volNum,\n      isPoetryFinished,\n      isDisplayFromSaved,\n      inspirationImg,\n      isPencilState,\n      isMarkerState,\n      isLoading,\n      isNavOpen,\n      isOpen,\n      step\n    } = this.state;\n\n    const displayComponent = i => {\n      switch (i) {\n        case 0:\n          this.setState({ step: 0 });\n          break;\n        case 1:\n          this.setState({ step: 1 });\n          break;\n        case 2:\n          this.setState({ step: 2 });\n          break;\n        default:\n          break;\n      }\n    };\n\n    const componentToBeRendered = () => {\n      switch (step) {\n        case 0:\n          return (\n            <div className='video-container'>\n              <iframe\n                title='instructions'\n                className='video'\n                src='https://www.youtube.com/embed/wKpVgoGr6kE'\n              />\n            </div>\n          );\n          break;\n        case 1:\n          return (\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={7}\n              lg={7}\n              lx={7}\n              className='newspaper-container'\n            >\n              <Newspaper\n                volNum={volNum}\n                entireCurrentArticleOF={entireCurrentArticleOF}\n                isPencilState={isPencilState}\n                isMarkerState={isMarkerState}\n                isInspiration={isInspiration}\n                isDisplayFromSaved={isDisplayFromSaved}\n                inspirationImg={inspirationImg}\n                currentTitleWordMap={currentTitleWordMap}\n                currentAuthorWordMap={currentAuthorWordMap}\n                isPoetryFinished={isPoetryFinished}\n                currentContentWordMap={currentContentWordMap}\n                onClickHandler={this.onClickHandler}\n                onMouseOverHandler={this.onMouseOverHandler}\n                loadNewArticle={this.loadNewArticle}\n                loadExamples={this.loadExamples}\n                pencilState={this.pencilState}\n                markerState={this.markerState}\n                saveState={this.saveState}\n                saveCurrentArticle={this.saveCurrentArticle}\n              />\n            </Grid>\n          );\n          break;\n        case 2:\n\n          return (\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={3}\n              lg={3}\n              className='saved-newspapers-container'\n            >\n              <SavedNewspaper\n                onSaveHandler={this.onSaveHandler}\n                savedArticles={savedArticles}\n                volNum={volNum}\n                deleteSavedHandler={this.deleteSavedHandler}\n                isPoetryFinished={isPoetryFinished}\n              />\n            </Grid>\n          );\n          break;\n      }\n    };\n\n    if (_.isEmpty(entireCurrentArticleOF)) {\n      return (\n        <Grid container className='main-container'>\n          <Loader\n            loaded={false}\n            scale={2.0}\n            top='50%'\n            left='50%'\n            position='relative'\n            loadedClassName='loader'\n          />\n        </Grid>\n      );\n    }\n\n    if (isMobile) {\n      return (\n        <>\n          <button\n            type='button'\n            className='nav-container'\n            onClick={this.toggleNav}\n          >\n            <DehazeIcon />\n          </button>\n          <MobileNav\n            toggleNav={this.toggleNav}\n            isNavOpen={isNavOpen}\n            displayComponent={displayComponent}\n          />\n          {console.log(\"here three\")}\n          {componentToBeRendered()}\n          {/* {this.componentToBeRendered || (\n            <div className='video-container'>\n              <iframe\n                title='instructions'\n                className='video'\n                src='https://www.youtube.com/embed/wKpVgoGr6kE'\n              />\n            </div>\n          )} */}\n        </>\n      );\n    }\n\n    return (\n      <Grid container className='main-container'>\n        <Modal handleClose={this.handleClose} isOpen={isOpen} />\n        <Grid item className={\"bg-showing\"} md={2} lg={2} lx={2}>\n          <Button\n            className='learnmore-button'\n            variant='contained'\n            size='small'\n            onClick={this.handleOpen}\n          >\n            Learn more\n          </Button>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={7}\n          lg={7}\n          lx={7}\n          className={`newspaper-container ${isLoading ? \"loader\" : \"\"}`}\n        >\n          <Newspaper\n            volNum={volNum}\n            entireCurrentArticleOF={entireCurrentArticleOF}\n            isPencilState={isPencilState}\n            isMarkerState={isMarkerState}\n            isInspiration={isInspiration}\n            isDisplayFromSaved={isDisplayFromSaved}\n            isPoetryFinished={isPoetryFinished}\n            inspirationImg={inspirationImg}\n            currentTitleWordMap={currentTitleWordMap}\n            currentAuthorWordMap={currentAuthorWordMap}\n            currentContentWordMap={currentContentWordMap}\n            onClickHandler={this.onClickHandler}\n            onMouseOverHandler={this.onMouseOverHandler}\n            loadNewArticle={this.loadNewArticle}\n            loadExamples={this.loadExamples}\n            pencilState={this.pencilState}\n            markerState={this.markerState}\n            saveState={this.saveState}\n            saveCurrentArticle={this.saveCurrentArticle}\n          />\n        </Grid>\n        <Grid item xs={12} md={3} lg={3}>\n          <SavedNewspaper\n            onSaveHandler={this.onSaveHandler}\n            savedArticles={savedArticles}\n            volNum={volNum}\n            deleteSavedHandler={this.deleteSavedHandler}\n            isPoetryFinished={isPoetryFinished}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/1.be86d7a1.png\";","module.exports = __webpack_public_path__ + \"static/media/2.53b4d42f.png\";","module.exports = __webpack_public_path__ + \"static/media/3.13735280.png\";","module.exports = __webpack_public_path__ + \"static/media/4.58af08ba.png\";"],"sourceRoot":""}